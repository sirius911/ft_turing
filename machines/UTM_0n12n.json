{
    "name": "UTM_0n12n",
    "alphabet": [
        "&",
        ":",
        "^",
        "{",
        "}",
        "[",
        "]",
        "<",
        ">",
        "A",
        "B",
        "C",
        "D",
        "E",
        "Z",
        "0",
        "1",
        "X",
        "Y",
        ".",
        "y",
        "n",
        " "
    ],
    "blank": " ",
    "states": [
        "init",
        "goto-null-A",
        "goto-null-B",
        "goto-null-C",
        "goto-null-D",
        "goto-null-E",
        "goto-null-Z",
        "goto-state-A",
        "goto-state-B",
        "goto-state-C",
        "goto-state-D",
        "goto-state-E",
        "goto-state-Z",
        "init-find-A:0",
        "init-find-A:1",
        "init-find-A:X",
        "init-find-A:Y",
        "init-find-A:.",
        "init-find-A:y",
        "init-find-A:n",
        "init-find-A: ",
        "init-find-B:0",
        "init-find-B:1",
        "init-find-B:X",
        "init-find-B:Y",
        "init-find-B:.",
        "init-find-B:y",
        "init-find-B:n",
        "init-find-B: ",
        "init-find-C:0",
        "init-find-C:1",
        "init-find-C:X",
        "init-find-C:Y",
        "init-find-C:.",
        "init-find-C:y",
        "init-find-C:n",
        "init-find-C: ",
        "init-find-D:0",
        "init-find-D:1",
        "init-find-D:X",
        "init-find-D:Y",
        "init-find-D:.",
        "init-find-D:y",
        "init-find-D:n",
        "init-find-D: ",
        "init-find-E:0",
        "init-find-E:1",
        "init-find-E:X",
        "init-find-E:Y",
        "init-find-E:.",
        "init-find-E:y",
        "init-find-E:n",
        "init-find-E: ",
        "init-find-Z:0",
        "init-find-Z:1",
        "init-find-Z:X",
        "init-find-Z:Y",
        "init-find-Z:.",
        "init-find-Z:y",
        "init-find-Z:n",
        "init-find-Z: ",
        "find-state-A(0)",
        "find-state-A(1)",
        "find-state-A(X)",
        "find-state-A(Y)",
        "find-state-A(.)",
        "find-state-A(y)",
        "find-state-A(n)",
        "find-state-A( )",
        "find-state-B(0)",
        "find-state-B(1)",
        "find-state-B(X)",
        "find-state-B(Y)",
        "find-state-B(.)",
        "find-state-B(y)",
        "find-state-B(n)",
        "find-state-B( )",
        "find-state-C(0)",
        "find-state-C(1)",
        "find-state-C(X)",
        "find-state-C(Y)",
        "find-state-C(.)",
        "find-state-C(y)",
        "find-state-C(n)",
        "find-state-C( )",
        "find-state-D(0)",
        "find-state-D(1)",
        "find-state-D(X)",
        "find-state-D(Y)",
        "find-state-D(.)",
        "find-state-D(y)",
        "find-state-D(n)",
        "find-state-D( )",
        "find-state-E(0)",
        "find-state-E(1)",
        "find-state-E(X)",
        "find-state-E(Y)",
        "find-state-E(.)",
        "find-state-E(y)",
        "find-state-E(n)",
        "find-state-E( )",
        "find-state-Z(0)",
        "find-state-Z(1)",
        "find-state-Z(X)",
        "find-state-Z(Y)",
        "find-state-Z(.)",
        "find-state-Z(y)",
        "find-state-Z(n)",
        "find-state-Z( )",
        "check-op-A(0)",
        "check-op-A(1)",
        "check-op-A(X)",
        "check-op-A(Y)",
        "check-op-A(.)",
        "check-op-A(y)",
        "check-op-A(n)",
        "check-op-A( )",
        "check-op-B(0)",
        "check-op-B(1)",
        "check-op-B(X)",
        "check-op-B(Y)",
        "check-op-B(.)",
        "check-op-B(y)",
        "check-op-B(n)",
        "check-op-B( )",
        "check-op-C(0)",
        "check-op-C(1)",
        "check-op-C(X)",
        "check-op-C(Y)",
        "check-op-C(.)",
        "check-op-C(y)",
        "check-op-C(n)",
        "check-op-C( )",
        "check-op-D(0)",
        "check-op-D(1)",
        "check-op-D(X)",
        "check-op-D(Y)",
        "check-op-D(.)",
        "check-op-D(y)",
        "check-op-D(n)",
        "check-op-D( )",
        "check-op-E(0)",
        "check-op-E(1)",
        "check-op-E(X)",
        "check-op-E(Y)",
        "check-op-E(.)",
        "check-op-E(y)",
        "check-op-E(n)",
        "check-op-E( )",
        "check-op-Z(0)",
        "check-op-Z(1)",
        "check-op-Z(X)",
        "check-op-Z(Y)",
        "check-op-Z(.)",
        "check-op-Z(y)",
        "check-op-Z(n)",
        "check-op-Z( )",
        "cmp-read-A(0)",
        "cmp-read-A(1)",
        "cmp-read-A(X)",
        "cmp-read-A(Y)",
        "cmp-read-A(.)",
        "cmp-read-A(y)",
        "cmp-read-A(n)",
        "cmp-read-A( )",
        "cmp-read-B(0)",
        "cmp-read-B(1)",
        "cmp-read-B(X)",
        "cmp-read-B(Y)",
        "cmp-read-B(.)",
        "cmp-read-B(y)",
        "cmp-read-B(n)",
        "cmp-read-B( )",
        "cmp-read-C(0)",
        "cmp-read-C(1)",
        "cmp-read-C(X)",
        "cmp-read-C(Y)",
        "cmp-read-C(.)",
        "cmp-read-C(y)",
        "cmp-read-C(n)",
        "cmp-read-C( )",
        "cmp-read-D(0)",
        "cmp-read-D(1)",
        "cmp-read-D(X)",
        "cmp-read-D(Y)",
        "cmp-read-D(.)",
        "cmp-read-D(y)",
        "cmp-read-D(n)",
        "cmp-read-D( )",
        "cmp-read-E(0)",
        "cmp-read-E(1)",
        "cmp-read-E(X)",
        "cmp-read-E(Y)",
        "cmp-read-E(.)",
        "cmp-read-E(y)",
        "cmp-read-E(n)",
        "cmp-read-E( )",
        "cmp-read-Z(0)",
        "cmp-read-Z(1)",
        "cmp-read-Z(X)",
        "cmp-read-Z(Y)",
        "cmp-read-Z(.)",
        "cmp-read-Z(y)",
        "cmp-read-Z(n)",
        "cmp-read-Z( )",
        "get-state-0",
        "get-state-1",
        "get-state-X",
        "get-state-Y",
        "get-state-.",
        "get-state-y",
        "get-state-n",
        "get-state- ",
        "get-dir-A",
        "get-dir-B",
        "get-dir-C",
        "get-dir-D",
        "get-dir-E",
        "get-dir-Z",
        "get-write-A:<",
        "get-write-A:>",
        "get-write-B:<",
        "get-write-B:>",
        "get-write-C:<",
        "get-write-C:>",
        "get-write-D:<",
        "get-write-D:>",
        "get-write-E:<",
        "get-write-E:>",
        "get-write-Z:<",
        "get-write-Z:>",
        "to-next-trans-A(0)",
        "to-next-trans-A(1)",
        "to-next-trans-A(X)",
        "to-next-trans-A(Y)",
        "to-next-trans-A(.)",
        "to-next-trans-A(y)",
        "to-next-trans-A(n)",
        "to-next-trans-A( )",
        "to-next-trans-B(0)",
        "to-next-trans-B(1)",
        "to-next-trans-B(X)",
        "to-next-trans-B(Y)",
        "to-next-trans-B(.)",
        "to-next-trans-B(y)",
        "to-next-trans-B(n)",
        "to-next-trans-B( )",
        "to-next-trans-C(0)",
        "to-next-trans-C(1)",
        "to-next-trans-C(X)",
        "to-next-trans-C(Y)",
        "to-next-trans-C(.)",
        "to-next-trans-C(y)",
        "to-next-trans-C(n)",
        "to-next-trans-C( )",
        "to-next-trans-D(0)",
        "to-next-trans-D(1)",
        "to-next-trans-D(X)",
        "to-next-trans-D(Y)",
        "to-next-trans-D(.)",
        "to-next-trans-D(y)",
        "to-next-trans-D(n)",
        "to-next-trans-D( )",
        "to-next-trans-E(0)",
        "to-next-trans-E(1)",
        "to-next-trans-E(X)",
        "to-next-trans-E(Y)",
        "to-next-trans-E(.)",
        "to-next-trans-E(y)",
        "to-next-trans-E(n)",
        "to-next-trans-E( )",
        "to-next-trans-Z(0)",
        "to-next-trans-Z(1)",
        "to-next-trans-Z(X)",
        "to-next-trans-Z(Y)",
        "to-next-trans-Z(.)",
        "to-next-trans-Z(y)",
        "to-next-trans-Z(n)",
        "to-next-trans-Z( )",
        "eval-<(0)~A",
        "eval-<(1)~A",
        "eval-<(X)~A",
        "eval-<(Y)~A",
        "eval-<(.)~A",
        "eval-<(y)~A",
        "eval-<(n)~A",
        "eval-<( )~A",
        "eval->(0)~A",
        "eval->(1)~A",
        "eval->(X)~A",
        "eval->(Y)~A",
        "eval->(.)~A",
        "eval->(y)~A",
        "eval->(n)~A",
        "eval->( )~A",
        "eval-<(0)~B",
        "eval-<(1)~B",
        "eval-<(X)~B",
        "eval-<(Y)~B",
        "eval-<(.)~B",
        "eval-<(y)~B",
        "eval-<(n)~B",
        "eval-<( )~B",
        "eval->(0)~B",
        "eval->(1)~B",
        "eval->(X)~B",
        "eval->(Y)~B",
        "eval->(.)~B",
        "eval->(y)~B",
        "eval->(n)~B",
        "eval->( )~B",
        "eval-<(0)~C",
        "eval-<(1)~C",
        "eval-<(X)~C",
        "eval-<(Y)~C",
        "eval-<(.)~C",
        "eval-<(y)~C",
        "eval-<(n)~C",
        "eval-<( )~C",
        "eval->(0)~C",
        "eval->(1)~C",
        "eval->(X)~C",
        "eval->(Y)~C",
        "eval->(.)~C",
        "eval->(y)~C",
        "eval->(n)~C",
        "eval->( )~C",
        "eval-<(0)~D",
        "eval-<(1)~D",
        "eval-<(X)~D",
        "eval-<(Y)~D",
        "eval-<(.)~D",
        "eval-<(y)~D",
        "eval-<(n)~D",
        "eval-<( )~D",
        "eval->(0)~D",
        "eval->(1)~D",
        "eval->(X)~D",
        "eval->(Y)~D",
        "eval->(.)~D",
        "eval->(y)~D",
        "eval->(n)~D",
        "eval->( )~D",
        "eval-<(0)~E",
        "eval-<(1)~E",
        "eval-<(X)~E",
        "eval-<(Y)~E",
        "eval-<(.)~E",
        "eval-<(y)~E",
        "eval-<(n)~E",
        "eval-<( )~E",
        "eval->(0)~E",
        "eval->(1)~E",
        "eval->(X)~E",
        "eval->(Y)~E",
        "eval->(.)~E",
        "eval->(y)~E",
        "eval->(n)~E",
        "eval->( )~E",
        "eval-<(0)~Z",
        "eval-<(1)~Z",
        "eval-<(X)~Z",
        "eval-<(Y)~Z",
        "eval-<(.)~Z",
        "eval-<(y)~Z",
        "eval-<(n)~Z",
        "eval-<( )~Z",
        "eval->(0)~Z",
        "eval->(1)~Z",
        "eval->(X)~Z",
        "eval->(Y)~Z",
        "eval->(.)~Z",
        "eval->(y)~Z",
        "eval->(n)~Z",
        "eval->( )~Z",
        "HALT"
    ],
    "initial": "init",
    "finals": [
        "HALT"
    ],
    "transitions": {
        "init": [
            {
                "read": "A",
                "to_state": "goto-null-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "goto-null-A": [
            {
                "read": "&",
                "to_state": "goto-null-A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-A",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "goto-null-A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "goto-null-A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-A",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-B": [
            {
                "read": "&",
                "to_state": "goto-null-B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-B",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "goto-null-B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "goto-null-B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-B",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-C": [
            {
                "read": "&",
                "to_state": "goto-null-C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-C",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "goto-null-C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "goto-null-C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-C",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-D": [
            {
                "read": "&",
                "to_state": "goto-null-D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-D",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "goto-null-D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "goto-null-D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-D",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-E": [
            {
                "read": "&",
                "to_state": "goto-null-E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-E",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "goto-null-E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "goto-null-E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-E",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-Z": [
            {
                "read": "&",
                "to_state": "goto-null-Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-Z",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "goto-null-Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "goto-null-Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-Z",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-state-A": [
            {
                "read": "0",
                "to_state": "init-find-A:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-A:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-A:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-B": [
            {
                "read": "0",
                "to_state": "init-find-B:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-B:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-B:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-C": [
            {
                "read": "0",
                "to_state": "init-find-C:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-C:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-C:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-D": [
            {
                "read": "0",
                "to_state": "init-find-D:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-D:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-D:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-E": [
            {
                "read": "0",
                "to_state": "init-find-E:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-E:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-E:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-Z": [
            {
                "read": "0",
                "to_state": "HALT",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "HALT",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "HALT",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "HALT",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "HALT",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "HALT",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "HALT",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "HALT",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "init-find-A:0": [
            {
                "read": ":",
                "to_state": "init-find-A:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-A:0",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-A:0",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:1": [
            {
                "read": ":",
                "to_state": "init-find-A:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-A:1",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-A:1",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:X": [
            {
                "read": ":",
                "to_state": "init-find-A:X",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:X",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:X",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:X",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:X",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:X",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:X",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:X",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:X",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:X",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:X",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:X",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:X",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:X",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:X",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-A:X",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-A:X",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:X",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:X",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:X",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:X",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(X)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:Y": [
            {
                "read": ":",
                "to_state": "init-find-A:Y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:Y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:Y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:Y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:Y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:Y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:Y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:Y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:Y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:Y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:Y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:Y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:Y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:Y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:Y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-A:Y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-A:Y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:Y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:Y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:Y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:Y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(Y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:.": [
            {
                "read": ":",
                "to_state": "init-find-A:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-A:.",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-A:.",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:y": [
            {
                "read": ":",
                "to_state": "init-find-A:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-A:y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-A:y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:n": [
            {
                "read": ":",
                "to_state": "init-find-A:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-A:n",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-A:n",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A: ": [
            {
                "read": ":",
                "to_state": "init-find-A: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-A: ",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-A: ",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:0": [
            {
                "read": ":",
                "to_state": "init-find-B:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-B:0",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-B:0",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:1": [
            {
                "read": ":",
                "to_state": "init-find-B:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-B:1",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-B:1",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:X": [
            {
                "read": ":",
                "to_state": "init-find-B:X",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:X",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:X",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:X",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:X",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:X",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:X",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:X",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:X",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:X",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:X",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:X",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:X",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:X",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:X",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-B:X",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-B:X",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:X",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:X",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:X",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:X",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(X)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:Y": [
            {
                "read": ":",
                "to_state": "init-find-B:Y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:Y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:Y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:Y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:Y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:Y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:Y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:Y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:Y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:Y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:Y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:Y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:Y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:Y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:Y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-B:Y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-B:Y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:Y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:Y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:Y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:Y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(Y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:.": [
            {
                "read": ":",
                "to_state": "init-find-B:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-B:.",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-B:.",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:y": [
            {
                "read": ":",
                "to_state": "init-find-B:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-B:y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-B:y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:n": [
            {
                "read": ":",
                "to_state": "init-find-B:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-B:n",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-B:n",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B: ": [
            {
                "read": ":",
                "to_state": "init-find-B: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-B: ",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-B: ",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:0": [
            {
                "read": ":",
                "to_state": "init-find-C:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-C:0",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-C:0",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:1": [
            {
                "read": ":",
                "to_state": "init-find-C:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-C:1",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-C:1",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:X": [
            {
                "read": ":",
                "to_state": "init-find-C:X",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:X",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:X",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:X",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:X",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:X",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:X",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:X",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:X",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:X",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:X",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:X",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:X",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:X",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:X",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-C:X",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-C:X",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:X",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:X",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:X",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:X",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(X)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:Y": [
            {
                "read": ":",
                "to_state": "init-find-C:Y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:Y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:Y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:Y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:Y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:Y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:Y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:Y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:Y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:Y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:Y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:Y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:Y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:Y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:Y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-C:Y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-C:Y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:Y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:Y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:Y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:Y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(Y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:.": [
            {
                "read": ":",
                "to_state": "init-find-C:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-C:.",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-C:.",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:y": [
            {
                "read": ":",
                "to_state": "init-find-C:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-C:y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-C:y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:n": [
            {
                "read": ":",
                "to_state": "init-find-C:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-C:n",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-C:n",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C: ": [
            {
                "read": ":",
                "to_state": "init-find-C: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-C: ",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-C: ",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:0": [
            {
                "read": ":",
                "to_state": "init-find-D:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-D:0",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-D:0",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:1": [
            {
                "read": ":",
                "to_state": "init-find-D:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-D:1",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-D:1",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:X": [
            {
                "read": ":",
                "to_state": "init-find-D:X",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:X",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:X",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:X",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:X",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:X",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:X",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:X",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:X",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:X",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:X",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:X",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:X",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:X",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:X",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-D:X",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-D:X",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:X",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:X",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:X",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:X",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(X)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:Y": [
            {
                "read": ":",
                "to_state": "init-find-D:Y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:Y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:Y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:Y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:Y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:Y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:Y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:Y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:Y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:Y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:Y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:Y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:Y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:Y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:Y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-D:Y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-D:Y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:Y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:Y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:Y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:Y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(Y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:.": [
            {
                "read": ":",
                "to_state": "init-find-D:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-D:.",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-D:.",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:y": [
            {
                "read": ":",
                "to_state": "init-find-D:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-D:y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-D:y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:n": [
            {
                "read": ":",
                "to_state": "init-find-D:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-D:n",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-D:n",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D: ": [
            {
                "read": ":",
                "to_state": "init-find-D: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-D: ",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-D: ",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:0": [
            {
                "read": ":",
                "to_state": "init-find-E:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-E:0",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-E:0",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:1": [
            {
                "read": ":",
                "to_state": "init-find-E:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-E:1",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-E:1",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:X": [
            {
                "read": ":",
                "to_state": "init-find-E:X",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:X",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:X",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:X",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:X",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:X",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:X",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:X",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:X",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:X",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:X",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:X",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:X",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:X",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:X",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-E:X",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-E:X",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:X",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:X",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:X",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:X",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(X)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:Y": [
            {
                "read": ":",
                "to_state": "init-find-E:Y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:Y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:Y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:Y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:Y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:Y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:Y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:Y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:Y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:Y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:Y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:Y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:Y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:Y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:Y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-E:Y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-E:Y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:Y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:Y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:Y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:Y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(Y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:.": [
            {
                "read": ":",
                "to_state": "init-find-E:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-E:.",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-E:.",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:y": [
            {
                "read": ":",
                "to_state": "init-find-E:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-E:y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-E:y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:n": [
            {
                "read": ":",
                "to_state": "init-find-E:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-E:n",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-E:n",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E: ": [
            {
                "read": ":",
                "to_state": "init-find-E: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-E: ",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-E: ",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:0": [
            {
                "read": ":",
                "to_state": "init-find-Z:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-Z:0",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-Z:0",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:1": [
            {
                "read": ":",
                "to_state": "init-find-Z:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-Z:1",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-Z:1",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:X": [
            {
                "read": ":",
                "to_state": "init-find-Z:X",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:X",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:X",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:X",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:X",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:X",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:X",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:X",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:X",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:X",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:X",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:X",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:X",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:X",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:X",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:X",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-Z:X",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-Z:X",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:X",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:X",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:X",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:X",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(X)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:Y": [
            {
                "read": ":",
                "to_state": "init-find-Z:Y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:Y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:Y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:Y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:Y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:Y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:Y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:Y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:Y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:Y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:Y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:Y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:Y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:Y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:Y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:Y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-Z:Y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-Z:Y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:Y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:Y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:Y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:Y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(Y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:.": [
            {
                "read": ":",
                "to_state": "init-find-Z:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-Z:.",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-Z:.",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:y": [
            {
                "read": ":",
                "to_state": "init-find-Z:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-Z:y",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-Z:y",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:n": [
            {
                "read": ":",
                "to_state": "init-find-Z:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-Z:n",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-Z:n",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z: ": [
            {
                "read": ":",
                "to_state": "init-find-Z: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": "X",
                "to_state": "init-find-Z: ",
                "write": "X",
                "action": "LEFT"
            },
            {
                "read": "Y",
                "to_state": "init-find-Z: ",
                "write": "Y",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "find-state-A(0)": [
            {
                "read": "0",
                "to_state": "find-state-A(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(1)": [
            {
                "read": "0",
                "to_state": "find-state-A(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(X)": [
            {
                "read": "0",
                "to_state": "find-state-A(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(X)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(X)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(Y)": [
            {
                "read": "0",
                "to_state": "find-state-A(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(Y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(Y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(.)": [
            {
                "read": "0",
                "to_state": "find-state-A(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(y)": [
            {
                "read": "0",
                "to_state": "find-state-A(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(n)": [
            {
                "read": "0",
                "to_state": "find-state-A(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A( )": [
            {
                "read": "0",
                "to_state": "find-state-A( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(0)": [
            {
                "read": "0",
                "to_state": "find-state-B(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(1)": [
            {
                "read": "0",
                "to_state": "find-state-B(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(X)": [
            {
                "read": "0",
                "to_state": "find-state-B(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(X)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(X)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(Y)": [
            {
                "read": "0",
                "to_state": "find-state-B(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(Y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(Y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(.)": [
            {
                "read": "0",
                "to_state": "find-state-B(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(y)": [
            {
                "read": "0",
                "to_state": "find-state-B(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(n)": [
            {
                "read": "0",
                "to_state": "find-state-B(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B( )": [
            {
                "read": "0",
                "to_state": "find-state-B( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(0)": [
            {
                "read": "0",
                "to_state": "find-state-C(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(1)": [
            {
                "read": "0",
                "to_state": "find-state-C(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(X)": [
            {
                "read": "0",
                "to_state": "find-state-C(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(X)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(X)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(Y)": [
            {
                "read": "0",
                "to_state": "find-state-C(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(Y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(Y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(.)": [
            {
                "read": "0",
                "to_state": "find-state-C(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(y)": [
            {
                "read": "0",
                "to_state": "find-state-C(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(n)": [
            {
                "read": "0",
                "to_state": "find-state-C(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C( )": [
            {
                "read": "0",
                "to_state": "find-state-C( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(0)": [
            {
                "read": "0",
                "to_state": "find-state-D(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(1)": [
            {
                "read": "0",
                "to_state": "find-state-D(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(X)": [
            {
                "read": "0",
                "to_state": "find-state-D(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(X)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(X)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(Y)": [
            {
                "read": "0",
                "to_state": "find-state-D(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(Y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(Y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(.)": [
            {
                "read": "0",
                "to_state": "find-state-D(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(y)": [
            {
                "read": "0",
                "to_state": "find-state-D(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(n)": [
            {
                "read": "0",
                "to_state": "find-state-D(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D( )": [
            {
                "read": "0",
                "to_state": "find-state-D( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(0)": [
            {
                "read": "0",
                "to_state": "find-state-E(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(1)": [
            {
                "read": "0",
                "to_state": "find-state-E(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(X)": [
            {
                "read": "0",
                "to_state": "find-state-E(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(X)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(X)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(Y)": [
            {
                "read": "0",
                "to_state": "find-state-E(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(Y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(Y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(.)": [
            {
                "read": "0",
                "to_state": "find-state-E(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(y)": [
            {
                "read": "0",
                "to_state": "find-state-E(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(n)": [
            {
                "read": "0",
                "to_state": "find-state-E(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E( )": [
            {
                "read": "0",
                "to_state": "find-state-E( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(0)": [
            {
                "read": "0",
                "to_state": "find-state-Z(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(0)",
                "write": "E",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(1)": [
            {
                "read": "0",
                "to_state": "find-state-Z(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(1)",
                "write": "E",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(X)": [
            {
                "read": "0",
                "to_state": "find-state-Z(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(X)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(X)",
                "write": "E",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(Y)": [
            {
                "read": "0",
                "to_state": "find-state-Z(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(Y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(Y)",
                "write": "E",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(.)": [
            {
                "read": "0",
                "to_state": "find-state-Z(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(.)",
                "write": "E",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(y)": [
            {
                "read": "0",
                "to_state": "find-state-Z(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(y)",
                "write": "E",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(n)": [
            {
                "read": "0",
                "to_state": "find-state-Z(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(n)",
                "write": "E",
                "action": "RIGHT"
            }
        ],
        "find-state-Z( )": [
            {
                "read": "0",
                "to_state": "find-state-Z( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z( )",
                "write": "E",
                "action": "RIGHT"
            }
        ],
        "check-op-A(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(X)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(Y)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A( )": [
            {
                "read": "{",
                "to_state": "cmp-read-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-A( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-A( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(X)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(Y)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B( )": [
            {
                "read": "{",
                "to_state": "cmp-read-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-B( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-B( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(X)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(Y)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C( )": [
            {
                "read": "{",
                "to_state": "cmp-read-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-C( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-C( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(X)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(Y)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D( )": [
            {
                "read": "{",
                "to_state": "cmp-read-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-D( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-D( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(X)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(Y)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E( )": [
            {
                "read": "{",
                "to_state": "cmp-read-E( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-E( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-E( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(X)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(Y)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z( )": [
            {
                "read": "{",
                "to_state": "cmp-read-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "find-state-Z( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "find-state-Z( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(X)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "get-state-X",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(Y)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "get-state-Y",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A( )": [
            {
                "read": "[",
                "to_state": "cmp-read-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(X)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "get-state-X",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(Y)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "get-state-Y",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B( )": [
            {
                "read": "[",
                "to_state": "cmp-read-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(X)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "get-state-X",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(Y)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "get-state-Y",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C( )": [
            {
                "read": "[",
                "to_state": "cmp-read-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(X)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "get-state-X",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(Y)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "get-state-Y",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D( )": [
            {
                "read": "[",
                "to_state": "cmp-read-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(X)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "get-state-X",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(Y)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "get-state-Y",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E( )": [
            {
                "read": "[",
                "to_state": "cmp-read-E( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(X)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "get-state-X",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(X)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(Y)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "get-state-Y",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(Y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z( )": [
            {
                "read": "[",
                "to_state": "cmp-read-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "get-state-0": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-1": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-X": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-Y": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-.": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-y": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-n": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state- ": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-dir-A": [
            {
                "read": "<",
                "to_state": "get-write-A:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-A:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-B": [
            {
                "read": "<",
                "to_state": "get-write-B:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-B:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-C": [
            {
                "read": "<",
                "to_state": "get-write-C:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-C:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-D": [
            {
                "read": "<",
                "to_state": "get-write-D:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-D:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-E": [
            {
                "read": "<",
                "to_state": "get-write-E:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-E:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-Z": [
            {
                "read": "<",
                "to_state": "get-write-Z:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-Z:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-write-A:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~A",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-A:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~A",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-B:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~B",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-B:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~B",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-C:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-C:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-D:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~D",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-D:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~D",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-E:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~E",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-E:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~E",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-Z:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~Z",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-Z:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~Z",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(X)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(Y)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A( )": [
            {
                "read": "]",
                "to_state": "cmp-read-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-A( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-A( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(X)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(Y)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B( )": [
            {
                "read": "]",
                "to_state": "cmp-read-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-B( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-B( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(X)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(Y)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C( )": [
            {
                "read": "]",
                "to_state": "cmp-read-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-C( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-C( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(X)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(Y)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D( )": [
            {
                "read": "]",
                "to_state": "cmp-read-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-D( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-D( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(X)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(Y)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E( )": [
            {
                "read": "]",
                "to_state": "cmp-read-E( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-E( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-E( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(0)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(0)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(1)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(1)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(X)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(X)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(X)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(X)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(X)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(X)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(X)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(X)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(X)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(X)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(X)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(X)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(X)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(X)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(X)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(X)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(X)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(X)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(X)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(X)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(X)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(X)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(X)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(Y)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(Y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(Y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(Y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(Y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(Y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(Y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(Y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(Y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(Y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(Y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(Y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(Y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(Y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(Y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(Y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(Y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(Y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(Y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(Y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(Y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(Y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(Y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(.)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(.)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(y)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(y)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z(n)",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z(n)",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z( )": [
            {
                "read": "]",
                "to_state": "cmp-read-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "to-next-trans-Z( )",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "to-next-trans-Z( )",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~A": [
            {
                "read": "&",
                "to_state": "eval-<(0)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(0)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(0)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~A": [
            {
                "read": "&",
                "to_state": "eval-<(1)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(1)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(1)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(X)~A": [
            {
                "read": "&",
                "to_state": "eval-<(X)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(X)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(X)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(X)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(X)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(X)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(X)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(X)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(X)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(X)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(X)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(X)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(X)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(X)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(X)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(X)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(X)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(X)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(X)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(X)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(X)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "X",
                "action": "LEFT"
            }
        ],
        "eval-<(Y)~A": [
            {
                "read": "&",
                "to_state": "eval-<(Y)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(Y)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(Y)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(Y)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(Y)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(Y)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(Y)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(Y)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(Y)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(Y)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(Y)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(Y)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(Y)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(Y)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(Y)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(Y)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(Y)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(Y)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(Y)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(Y)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(Y)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "Y",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~A": [
            {
                "read": "&",
                "to_state": "eval-<(.)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(.)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(.)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~A": [
            {
                "read": "&",
                "to_state": "eval-<(y)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(y)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(y)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~A": [
            {
                "read": "&",
                "to_state": "eval-<(n)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(n)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(n)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~A": [
            {
                "read": "&",
                "to_state": "eval-<( )~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<( )~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<( )~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~A": [
            {
                "read": "&",
                "to_state": "eval->(0)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(0)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(0)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~A": [
            {
                "read": "&",
                "to_state": "eval->(1)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(1)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(1)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(X)~A": [
            {
                "read": "&",
                "to_state": "eval->(X)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(X)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(X)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(X)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(X)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(X)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(X)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(X)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(X)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(X)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(X)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(X)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(X)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(X)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(X)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(X)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(X)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(X)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(X)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(X)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(X)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "X",
                "action": "RIGHT"
            }
        ],
        "eval->(Y)~A": [
            {
                "read": "&",
                "to_state": "eval->(Y)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(Y)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(Y)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(Y)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(Y)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(Y)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(Y)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(Y)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(Y)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(Y)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(Y)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(Y)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(Y)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(Y)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(Y)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(Y)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(Y)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(Y)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(Y)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(Y)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(Y)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "Y",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~A": [
            {
                "read": "&",
                "to_state": "eval->(.)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(.)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(.)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~A": [
            {
                "read": "&",
                "to_state": "eval->(y)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(y)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(y)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~A": [
            {
                "read": "&",
                "to_state": "eval->(n)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(n)~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(n)~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~A": [
            {
                "read": "&",
                "to_state": "eval->( )~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->( )~A",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->( )~A",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~B": [
            {
                "read": "&",
                "to_state": "eval-<(0)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(0)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(0)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~B": [
            {
                "read": "&",
                "to_state": "eval-<(1)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(1)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(1)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(X)~B": [
            {
                "read": "&",
                "to_state": "eval-<(X)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(X)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(X)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(X)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(X)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(X)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(X)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(X)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(X)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(X)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(X)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(X)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(X)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(X)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(X)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(X)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(X)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(X)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(X)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(X)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(X)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "X",
                "action": "LEFT"
            }
        ],
        "eval-<(Y)~B": [
            {
                "read": "&",
                "to_state": "eval-<(Y)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(Y)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(Y)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(Y)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(Y)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(Y)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(Y)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(Y)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(Y)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(Y)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(Y)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(Y)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(Y)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(Y)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(Y)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(Y)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(Y)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(Y)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(Y)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(Y)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(Y)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "Y",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~B": [
            {
                "read": "&",
                "to_state": "eval-<(.)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(.)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(.)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~B": [
            {
                "read": "&",
                "to_state": "eval-<(y)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(y)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(y)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~B": [
            {
                "read": "&",
                "to_state": "eval-<(n)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(n)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(n)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~B": [
            {
                "read": "&",
                "to_state": "eval-<( )~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<( )~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<( )~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~B": [
            {
                "read": "&",
                "to_state": "eval->(0)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(0)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(0)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~B": [
            {
                "read": "&",
                "to_state": "eval->(1)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(1)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(1)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(X)~B": [
            {
                "read": "&",
                "to_state": "eval->(X)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(X)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(X)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(X)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(X)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(X)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(X)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(X)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(X)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(X)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(X)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(X)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(X)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(X)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(X)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(X)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(X)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(X)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(X)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(X)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(X)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "X",
                "action": "RIGHT"
            }
        ],
        "eval->(Y)~B": [
            {
                "read": "&",
                "to_state": "eval->(Y)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(Y)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(Y)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(Y)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(Y)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(Y)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(Y)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(Y)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(Y)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(Y)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(Y)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(Y)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(Y)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(Y)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(Y)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(Y)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(Y)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(Y)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(Y)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(Y)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(Y)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "Y",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~B": [
            {
                "read": "&",
                "to_state": "eval->(.)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(.)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(.)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~B": [
            {
                "read": "&",
                "to_state": "eval->(y)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(y)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(y)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~B": [
            {
                "read": "&",
                "to_state": "eval->(n)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(n)~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(n)~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~B": [
            {
                "read": "&",
                "to_state": "eval->( )~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->( )~B",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->( )~B",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~C": [
            {
                "read": "&",
                "to_state": "eval-<(0)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(0)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(0)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~C": [
            {
                "read": "&",
                "to_state": "eval-<(1)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(1)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(1)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(X)~C": [
            {
                "read": "&",
                "to_state": "eval-<(X)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(X)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(X)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(X)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(X)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(X)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(X)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(X)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(X)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(X)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(X)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(X)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(X)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(X)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(X)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(X)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(X)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(X)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(X)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(X)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(X)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "X",
                "action": "LEFT"
            }
        ],
        "eval-<(Y)~C": [
            {
                "read": "&",
                "to_state": "eval-<(Y)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(Y)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(Y)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(Y)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(Y)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(Y)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(Y)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(Y)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(Y)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(Y)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(Y)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(Y)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(Y)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(Y)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(Y)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(Y)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(Y)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(Y)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(Y)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(Y)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(Y)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "Y",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~C": [
            {
                "read": "&",
                "to_state": "eval-<(.)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(.)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(.)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~C": [
            {
                "read": "&",
                "to_state": "eval-<(y)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(y)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(y)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~C": [
            {
                "read": "&",
                "to_state": "eval-<(n)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(n)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(n)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~C": [
            {
                "read": "&",
                "to_state": "eval-<( )~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<( )~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<( )~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~C": [
            {
                "read": "&",
                "to_state": "eval->(0)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(0)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(0)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~C": [
            {
                "read": "&",
                "to_state": "eval->(1)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(1)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(1)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(X)~C": [
            {
                "read": "&",
                "to_state": "eval->(X)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(X)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(X)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(X)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(X)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(X)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(X)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(X)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(X)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(X)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(X)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(X)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(X)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(X)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(X)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(X)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(X)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(X)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(X)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(X)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(X)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "X",
                "action": "RIGHT"
            }
        ],
        "eval->(Y)~C": [
            {
                "read": "&",
                "to_state": "eval->(Y)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(Y)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(Y)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(Y)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(Y)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(Y)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(Y)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(Y)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(Y)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(Y)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(Y)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(Y)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(Y)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(Y)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(Y)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(Y)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(Y)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(Y)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(Y)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(Y)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(Y)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "Y",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~C": [
            {
                "read": "&",
                "to_state": "eval->(.)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(.)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(.)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~C": [
            {
                "read": "&",
                "to_state": "eval->(y)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(y)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(y)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~C": [
            {
                "read": "&",
                "to_state": "eval->(n)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(n)~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(n)~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~C": [
            {
                "read": "&",
                "to_state": "eval->( )~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->( )~C",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->( )~C",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~D": [
            {
                "read": "&",
                "to_state": "eval-<(0)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(0)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(0)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~D": [
            {
                "read": "&",
                "to_state": "eval-<(1)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(1)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(1)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(X)~D": [
            {
                "read": "&",
                "to_state": "eval-<(X)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(X)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(X)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(X)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(X)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(X)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(X)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(X)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(X)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(X)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(X)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(X)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(X)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(X)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(X)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(X)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(X)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(X)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(X)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(X)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(X)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "X",
                "action": "LEFT"
            }
        ],
        "eval-<(Y)~D": [
            {
                "read": "&",
                "to_state": "eval-<(Y)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(Y)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(Y)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(Y)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(Y)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(Y)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(Y)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(Y)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(Y)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(Y)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(Y)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(Y)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(Y)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(Y)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(Y)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(Y)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(Y)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(Y)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(Y)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(Y)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(Y)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "Y",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~D": [
            {
                "read": "&",
                "to_state": "eval-<(.)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(.)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(.)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~D": [
            {
                "read": "&",
                "to_state": "eval-<(y)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(y)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(y)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~D": [
            {
                "read": "&",
                "to_state": "eval-<(n)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(n)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(n)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~D": [
            {
                "read": "&",
                "to_state": "eval-<( )~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<( )~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<( )~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~D": [
            {
                "read": "&",
                "to_state": "eval->(0)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(0)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(0)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~D": [
            {
                "read": "&",
                "to_state": "eval->(1)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(1)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(1)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(X)~D": [
            {
                "read": "&",
                "to_state": "eval->(X)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(X)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(X)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(X)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(X)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(X)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(X)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(X)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(X)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(X)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(X)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(X)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(X)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(X)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(X)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(X)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(X)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(X)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(X)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(X)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(X)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "X",
                "action": "RIGHT"
            }
        ],
        "eval->(Y)~D": [
            {
                "read": "&",
                "to_state": "eval->(Y)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(Y)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(Y)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(Y)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(Y)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(Y)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(Y)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(Y)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(Y)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(Y)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(Y)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(Y)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(Y)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(Y)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(Y)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(Y)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(Y)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(Y)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(Y)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(Y)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(Y)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "Y",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~D": [
            {
                "read": "&",
                "to_state": "eval->(.)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(.)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(.)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~D": [
            {
                "read": "&",
                "to_state": "eval->(y)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(y)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(y)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~D": [
            {
                "read": "&",
                "to_state": "eval->(n)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(n)~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(n)~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~D": [
            {
                "read": "&",
                "to_state": "eval->( )~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->( )~D",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->( )~D",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~E": [
            {
                "read": "&",
                "to_state": "eval-<(0)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(0)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(0)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~E": [
            {
                "read": "&",
                "to_state": "eval-<(1)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(1)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(1)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(X)~E": [
            {
                "read": "&",
                "to_state": "eval-<(X)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(X)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(X)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(X)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(X)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(X)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(X)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(X)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(X)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(X)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(X)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(X)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(X)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(X)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(X)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(X)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(X)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(X)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(X)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(X)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(X)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "X",
                "action": "LEFT"
            }
        ],
        "eval-<(Y)~E": [
            {
                "read": "&",
                "to_state": "eval-<(Y)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(Y)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(Y)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(Y)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(Y)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(Y)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(Y)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(Y)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(Y)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(Y)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(Y)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(Y)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(Y)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(Y)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(Y)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(Y)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(Y)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(Y)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(Y)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(Y)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(Y)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "Y",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~E": [
            {
                "read": "&",
                "to_state": "eval-<(.)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(.)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(.)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~E": [
            {
                "read": "&",
                "to_state": "eval-<(y)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(y)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(y)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~E": [
            {
                "read": "&",
                "to_state": "eval-<(n)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(n)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(n)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~E": [
            {
                "read": "&",
                "to_state": "eval-<( )~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<( )~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<( )~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~E": [
            {
                "read": "&",
                "to_state": "eval->(0)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(0)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(0)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~E": [
            {
                "read": "&",
                "to_state": "eval->(1)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(1)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(1)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(X)~E": [
            {
                "read": "&",
                "to_state": "eval->(X)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(X)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(X)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(X)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(X)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(X)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(X)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(X)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(X)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(X)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(X)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(X)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(X)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(X)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(X)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(X)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(X)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(X)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(X)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(X)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(X)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "X",
                "action": "RIGHT"
            }
        ],
        "eval->(Y)~E": [
            {
                "read": "&",
                "to_state": "eval->(Y)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(Y)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(Y)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(Y)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(Y)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(Y)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(Y)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(Y)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(Y)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(Y)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(Y)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(Y)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(Y)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(Y)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(Y)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(Y)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(Y)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(Y)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(Y)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(Y)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(Y)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "Y",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~E": [
            {
                "read": "&",
                "to_state": "eval->(.)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(.)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(.)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~E": [
            {
                "read": "&",
                "to_state": "eval->(y)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(y)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(y)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~E": [
            {
                "read": "&",
                "to_state": "eval->(n)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(n)~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(n)~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~E": [
            {
                "read": "&",
                "to_state": "eval->( )~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->( )~E",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->( )~E",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(0)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(0)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(0)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(1)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(1)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(1)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(X)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(X)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(X)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(X)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(X)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(X)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(X)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(X)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(X)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(X)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(X)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(X)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(X)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(X)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(X)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(X)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(X)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(X)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(X)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(X)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(X)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(X)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(X)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "X",
                "action": "LEFT"
            }
        ],
        "eval-<(Y)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(Y)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(Y)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(Y)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(Y)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(Y)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(Y)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(Y)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(Y)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(Y)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(Y)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(Y)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(Y)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(Y)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(Y)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(Y)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(Y)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(Y)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(Y)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(Y)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(Y)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(Y)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(Y)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "Y",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(.)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(.)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(.)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(y)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(y)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(y)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(n)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<(n)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<(n)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~Z": [
            {
                "read": "&",
                "to_state": "eval-<( )~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval-<( )~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval-<( )~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~Z": [
            {
                "read": "&",
                "to_state": "eval->(0)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(0)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(0)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~Z": [
            {
                "read": "&",
                "to_state": "eval->(1)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(1)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(1)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(X)~Z": [
            {
                "read": "&",
                "to_state": "eval->(X)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(X)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(X)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(X)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(X)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(X)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(X)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(X)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(X)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(X)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(X)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(X)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(X)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(X)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(X)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(X)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(X)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(X)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(X)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(X)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(X)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(X)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "X",
                "action": "RIGHT"
            }
        ],
        "eval->(Y)~Z": [
            {
                "read": "&",
                "to_state": "eval->(Y)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(Y)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(Y)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(Y)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(Y)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(Y)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(Y)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(Y)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(Y)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(Y)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(Y)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(Y)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(Y)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(Y)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(Y)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(Y)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(Y)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(Y)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(Y)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(Y)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(Y)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(Y)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "Y",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~Z": [
            {
                "read": "&",
                "to_state": "eval->(.)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(.)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(.)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~Z": [
            {
                "read": "&",
                "to_state": "eval->(y)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(y)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(y)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~Z": [
            {
                "read": "&",
                "to_state": "eval->(n)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->(n)~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->(n)~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~Z": [
            {
                "read": "&",
                "to_state": "eval->( )~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "X",
                "to_state": "eval->( )~Z",
                "write": "X",
                "action": "RIGHT"
            },
            {
                "read": "Y",
                "to_state": "eval->( )~Z",
                "write": "Y",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": " ",
                "action": "RIGHT"
            }
        ]
    }
}