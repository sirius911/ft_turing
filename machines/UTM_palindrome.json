{
    "name": "UTM_palindrome",
    "alphabet": [
        "&",
        ":",
        "^",
        "{",
        "}",
        "[",
        "]",
        "<",
        ">",
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "Z",
        "0",
        "1",
        ".",
        "=",
        "y",
        "n",
        " "
    ],
    "blank": " ",
    "states": [
        "init",
        "goto-null-A",
        "goto-null-B",
        "goto-null-C",
        "goto-null-D",
        "goto-null-E",
        "goto-null-F",
        "goto-null-G",
        "goto-null-H",
        "goto-null-I",
        "goto-null-J",
        "goto-null-K",
        "goto-null-L",
        "goto-null-Z",
        "goto-state-A",
        "goto-state-B",
        "goto-state-C",
        "goto-state-D",
        "goto-state-E",
        "goto-state-F",
        "goto-state-G",
        "goto-state-H",
        "goto-state-I",
        "goto-state-J",
        "goto-state-K",
        "goto-state-L",
        "goto-state-Z",
        "init-find-A:0",
        "init-find-A:1",
        "init-find-A:.",
        "init-find-A:=",
        "init-find-A:y",
        "init-find-A:n",
        "init-find-A: ",
        "init-find-B:0",
        "init-find-B:1",
        "init-find-B:.",
        "init-find-B:=",
        "init-find-B:y",
        "init-find-B:n",
        "init-find-B: ",
        "init-find-C:0",
        "init-find-C:1",
        "init-find-C:.",
        "init-find-C:=",
        "init-find-C:y",
        "init-find-C:n",
        "init-find-C: ",
        "init-find-D:0",
        "init-find-D:1",
        "init-find-D:.",
        "init-find-D:=",
        "init-find-D:y",
        "init-find-D:n",
        "init-find-D: ",
        "init-find-E:0",
        "init-find-E:1",
        "init-find-E:.",
        "init-find-E:=",
        "init-find-E:y",
        "init-find-E:n",
        "init-find-E: ",
        "init-find-F:0",
        "init-find-F:1",
        "init-find-F:.",
        "init-find-F:=",
        "init-find-F:y",
        "init-find-F:n",
        "init-find-F: ",
        "init-find-G:0",
        "init-find-G:1",
        "init-find-G:.",
        "init-find-G:=",
        "init-find-G:y",
        "init-find-G:n",
        "init-find-G: ",
        "init-find-H:0",
        "init-find-H:1",
        "init-find-H:.",
        "init-find-H:=",
        "init-find-H:y",
        "init-find-H:n",
        "init-find-H: ",
        "init-find-I:0",
        "init-find-I:1",
        "init-find-I:.",
        "init-find-I:=",
        "init-find-I:y",
        "init-find-I:n",
        "init-find-I: ",
        "init-find-J:0",
        "init-find-J:1",
        "init-find-J:.",
        "init-find-J:=",
        "init-find-J:y",
        "init-find-J:n",
        "init-find-J: ",
        "init-find-K:0",
        "init-find-K:1",
        "init-find-K:.",
        "init-find-K:=",
        "init-find-K:y",
        "init-find-K:n",
        "init-find-K: ",
        "init-find-L:0",
        "init-find-L:1",
        "init-find-L:.",
        "init-find-L:=",
        "init-find-L:y",
        "init-find-L:n",
        "init-find-L: ",
        "init-find-Z:0",
        "init-find-Z:1",
        "init-find-Z:.",
        "init-find-Z:=",
        "init-find-Z:y",
        "init-find-Z:n",
        "init-find-Z: ",
        "find-state-A(0)",
        "find-state-A(1)",
        "find-state-A(.)",
        "find-state-A(=)",
        "find-state-A(y)",
        "find-state-A(n)",
        "find-state-A( )",
        "find-state-B(0)",
        "find-state-B(1)",
        "find-state-B(.)",
        "find-state-B(=)",
        "find-state-B(y)",
        "find-state-B(n)",
        "find-state-B( )",
        "find-state-C(0)",
        "find-state-C(1)",
        "find-state-C(.)",
        "find-state-C(=)",
        "find-state-C(y)",
        "find-state-C(n)",
        "find-state-C( )",
        "find-state-D(0)",
        "find-state-D(1)",
        "find-state-D(.)",
        "find-state-D(=)",
        "find-state-D(y)",
        "find-state-D(n)",
        "find-state-D( )",
        "find-state-E(0)",
        "find-state-E(1)",
        "find-state-E(.)",
        "find-state-E(=)",
        "find-state-E(y)",
        "find-state-E(n)",
        "find-state-E( )",
        "find-state-F(0)",
        "find-state-F(1)",
        "find-state-F(.)",
        "find-state-F(=)",
        "find-state-F(y)",
        "find-state-F(n)",
        "find-state-F( )",
        "find-state-G(0)",
        "find-state-G(1)",
        "find-state-G(.)",
        "find-state-G(=)",
        "find-state-G(y)",
        "find-state-G(n)",
        "find-state-G( )",
        "find-state-H(0)",
        "find-state-H(1)",
        "find-state-H(.)",
        "find-state-H(=)",
        "find-state-H(y)",
        "find-state-H(n)",
        "find-state-H( )",
        "find-state-I(0)",
        "find-state-I(1)",
        "find-state-I(.)",
        "find-state-I(=)",
        "find-state-I(y)",
        "find-state-I(n)",
        "find-state-I( )",
        "find-state-J(0)",
        "find-state-J(1)",
        "find-state-J(.)",
        "find-state-J(=)",
        "find-state-J(y)",
        "find-state-J(n)",
        "find-state-J( )",
        "find-state-K(0)",
        "find-state-K(1)",
        "find-state-K(.)",
        "find-state-K(=)",
        "find-state-K(y)",
        "find-state-K(n)",
        "find-state-K( )",
        "find-state-L(0)",
        "find-state-L(1)",
        "find-state-L(.)",
        "find-state-L(=)",
        "find-state-L(y)",
        "find-state-L(n)",
        "find-state-L( )",
        "find-state-Z(0)",
        "find-state-Z(1)",
        "find-state-Z(.)",
        "find-state-Z(=)",
        "find-state-Z(y)",
        "find-state-Z(n)",
        "find-state-Z( )",
        "check-op-A(0)",
        "check-op-A(1)",
        "check-op-A(.)",
        "check-op-A(=)",
        "check-op-A(y)",
        "check-op-A(n)",
        "check-op-A( )",
        "check-op-B(0)",
        "check-op-B(1)",
        "check-op-B(.)",
        "check-op-B(=)",
        "check-op-B(y)",
        "check-op-B(n)",
        "check-op-B( )",
        "check-op-C(0)",
        "check-op-C(1)",
        "check-op-C(.)",
        "check-op-C(=)",
        "check-op-C(y)",
        "check-op-C(n)",
        "check-op-C( )",
        "check-op-D(0)",
        "check-op-D(1)",
        "check-op-D(.)",
        "check-op-D(=)",
        "check-op-D(y)",
        "check-op-D(n)",
        "check-op-D( )",
        "check-op-E(0)",
        "check-op-E(1)",
        "check-op-E(.)",
        "check-op-E(=)",
        "check-op-E(y)",
        "check-op-E(n)",
        "check-op-E( )",
        "check-op-F(0)",
        "check-op-F(1)",
        "check-op-F(.)",
        "check-op-F(=)",
        "check-op-F(y)",
        "check-op-F(n)",
        "check-op-F( )",
        "check-op-G(0)",
        "check-op-G(1)",
        "check-op-G(.)",
        "check-op-G(=)",
        "check-op-G(y)",
        "check-op-G(n)",
        "check-op-G( )",
        "check-op-H(0)",
        "check-op-H(1)",
        "check-op-H(.)",
        "check-op-H(=)",
        "check-op-H(y)",
        "check-op-H(n)",
        "check-op-H( )",
        "check-op-I(0)",
        "check-op-I(1)",
        "check-op-I(.)",
        "check-op-I(=)",
        "check-op-I(y)",
        "check-op-I(n)",
        "check-op-I( )",
        "check-op-J(0)",
        "check-op-J(1)",
        "check-op-J(.)",
        "check-op-J(=)",
        "check-op-J(y)",
        "check-op-J(n)",
        "check-op-J( )",
        "check-op-K(0)",
        "check-op-K(1)",
        "check-op-K(.)",
        "check-op-K(=)",
        "check-op-K(y)",
        "check-op-K(n)",
        "check-op-K( )",
        "check-op-L(0)",
        "check-op-L(1)",
        "check-op-L(.)",
        "check-op-L(=)",
        "check-op-L(y)",
        "check-op-L(n)",
        "check-op-L( )",
        "check-op-Z(0)",
        "check-op-Z(1)",
        "check-op-Z(.)",
        "check-op-Z(=)",
        "check-op-Z(y)",
        "check-op-Z(n)",
        "check-op-Z( )",
        "cmp-read-A(0)",
        "cmp-read-A(1)",
        "cmp-read-A(.)",
        "cmp-read-A(=)",
        "cmp-read-A(y)",
        "cmp-read-A(n)",
        "cmp-read-A( )",
        "cmp-read-B(0)",
        "cmp-read-B(1)",
        "cmp-read-B(.)",
        "cmp-read-B(=)",
        "cmp-read-B(y)",
        "cmp-read-B(n)",
        "cmp-read-B( )",
        "cmp-read-C(0)",
        "cmp-read-C(1)",
        "cmp-read-C(.)",
        "cmp-read-C(=)",
        "cmp-read-C(y)",
        "cmp-read-C(n)",
        "cmp-read-C( )",
        "cmp-read-D(0)",
        "cmp-read-D(1)",
        "cmp-read-D(.)",
        "cmp-read-D(=)",
        "cmp-read-D(y)",
        "cmp-read-D(n)",
        "cmp-read-D( )",
        "cmp-read-E(0)",
        "cmp-read-E(1)",
        "cmp-read-E(.)",
        "cmp-read-E(=)",
        "cmp-read-E(y)",
        "cmp-read-E(n)",
        "cmp-read-E( )",
        "cmp-read-F(0)",
        "cmp-read-F(1)",
        "cmp-read-F(.)",
        "cmp-read-F(=)",
        "cmp-read-F(y)",
        "cmp-read-F(n)",
        "cmp-read-F( )",
        "cmp-read-G(0)",
        "cmp-read-G(1)",
        "cmp-read-G(.)",
        "cmp-read-G(=)",
        "cmp-read-G(y)",
        "cmp-read-G(n)",
        "cmp-read-G( )",
        "cmp-read-H(0)",
        "cmp-read-H(1)",
        "cmp-read-H(.)",
        "cmp-read-H(=)",
        "cmp-read-H(y)",
        "cmp-read-H(n)",
        "cmp-read-H( )",
        "cmp-read-I(0)",
        "cmp-read-I(1)",
        "cmp-read-I(.)",
        "cmp-read-I(=)",
        "cmp-read-I(y)",
        "cmp-read-I(n)",
        "cmp-read-I( )",
        "cmp-read-J(0)",
        "cmp-read-J(1)",
        "cmp-read-J(.)",
        "cmp-read-J(=)",
        "cmp-read-J(y)",
        "cmp-read-J(n)",
        "cmp-read-J( )",
        "cmp-read-K(0)",
        "cmp-read-K(1)",
        "cmp-read-K(.)",
        "cmp-read-K(=)",
        "cmp-read-K(y)",
        "cmp-read-K(n)",
        "cmp-read-K( )",
        "cmp-read-L(0)",
        "cmp-read-L(1)",
        "cmp-read-L(.)",
        "cmp-read-L(=)",
        "cmp-read-L(y)",
        "cmp-read-L(n)",
        "cmp-read-L( )",
        "cmp-read-Z(0)",
        "cmp-read-Z(1)",
        "cmp-read-Z(.)",
        "cmp-read-Z(=)",
        "cmp-read-Z(y)",
        "cmp-read-Z(n)",
        "cmp-read-Z( )",
        "get-state-0",
        "get-state-1",
        "get-state-.",
        "get-state-=",
        "get-state-y",
        "get-state-n",
        "get-state- ",
        "get-dir-A",
        "get-dir-B",
        "get-dir-C",
        "get-dir-D",
        "get-dir-E",
        "get-dir-F",
        "get-dir-G",
        "get-dir-H",
        "get-dir-I",
        "get-dir-J",
        "get-dir-K",
        "get-dir-L",
        "get-dir-Z",
        "get-write-A:<",
        "get-write-A:>",
        "get-write-B:<",
        "get-write-B:>",
        "get-write-C:<",
        "get-write-C:>",
        "get-write-D:<",
        "get-write-D:>",
        "get-write-E:<",
        "get-write-E:>",
        "get-write-F:<",
        "get-write-F:>",
        "get-write-G:<",
        "get-write-G:>",
        "get-write-H:<",
        "get-write-H:>",
        "get-write-I:<",
        "get-write-I:>",
        "get-write-J:<",
        "get-write-J:>",
        "get-write-K:<",
        "get-write-K:>",
        "get-write-L:<",
        "get-write-L:>",
        "get-write-Z:<",
        "get-write-Z:>",
        "to-next-trans-A(0)",
        "to-next-trans-A(1)",
        "to-next-trans-A(.)",
        "to-next-trans-A(=)",
        "to-next-trans-A(y)",
        "to-next-trans-A(n)",
        "to-next-trans-A( )",
        "to-next-trans-B(0)",
        "to-next-trans-B(1)",
        "to-next-trans-B(.)",
        "to-next-trans-B(=)",
        "to-next-trans-B(y)",
        "to-next-trans-B(n)",
        "to-next-trans-B( )",
        "to-next-trans-C(0)",
        "to-next-trans-C(1)",
        "to-next-trans-C(.)",
        "to-next-trans-C(=)",
        "to-next-trans-C(y)",
        "to-next-trans-C(n)",
        "to-next-trans-C( )",
        "to-next-trans-D(0)",
        "to-next-trans-D(1)",
        "to-next-trans-D(.)",
        "to-next-trans-D(=)",
        "to-next-trans-D(y)",
        "to-next-trans-D(n)",
        "to-next-trans-D( )",
        "to-next-trans-E(0)",
        "to-next-trans-E(1)",
        "to-next-trans-E(.)",
        "to-next-trans-E(=)",
        "to-next-trans-E(y)",
        "to-next-trans-E(n)",
        "to-next-trans-E( )",
        "to-next-trans-F(0)",
        "to-next-trans-F(1)",
        "to-next-trans-F(.)",
        "to-next-trans-F(=)",
        "to-next-trans-F(y)",
        "to-next-trans-F(n)",
        "to-next-trans-F( )",
        "to-next-trans-G(0)",
        "to-next-trans-G(1)",
        "to-next-trans-G(.)",
        "to-next-trans-G(=)",
        "to-next-trans-G(y)",
        "to-next-trans-G(n)",
        "to-next-trans-G( )",
        "to-next-trans-H(0)",
        "to-next-trans-H(1)",
        "to-next-trans-H(.)",
        "to-next-trans-H(=)",
        "to-next-trans-H(y)",
        "to-next-trans-H(n)",
        "to-next-trans-H( )",
        "to-next-trans-I(0)",
        "to-next-trans-I(1)",
        "to-next-trans-I(.)",
        "to-next-trans-I(=)",
        "to-next-trans-I(y)",
        "to-next-trans-I(n)",
        "to-next-trans-I( )",
        "to-next-trans-J(0)",
        "to-next-trans-J(1)",
        "to-next-trans-J(.)",
        "to-next-trans-J(=)",
        "to-next-trans-J(y)",
        "to-next-trans-J(n)",
        "to-next-trans-J( )",
        "to-next-trans-K(0)",
        "to-next-trans-K(1)",
        "to-next-trans-K(.)",
        "to-next-trans-K(=)",
        "to-next-trans-K(y)",
        "to-next-trans-K(n)",
        "to-next-trans-K( )",
        "to-next-trans-L(0)",
        "to-next-trans-L(1)",
        "to-next-trans-L(.)",
        "to-next-trans-L(=)",
        "to-next-trans-L(y)",
        "to-next-trans-L(n)",
        "to-next-trans-L( )",
        "to-next-trans-Z(0)",
        "to-next-trans-Z(1)",
        "to-next-trans-Z(.)",
        "to-next-trans-Z(=)",
        "to-next-trans-Z(y)",
        "to-next-trans-Z(n)",
        "to-next-trans-Z( )",
        "eval-<(0)~A",
        "eval-<(1)~A",
        "eval-<(.)~A",
        "eval-<(=)~A",
        "eval-<(y)~A",
        "eval-<(n)~A",
        "eval-<( )~A",
        "eval->(0)~A",
        "eval->(1)~A",
        "eval->(.)~A",
        "eval->(=)~A",
        "eval->(y)~A",
        "eval->(n)~A",
        "eval->( )~A",
        "eval-<(0)~B",
        "eval-<(1)~B",
        "eval-<(.)~B",
        "eval-<(=)~B",
        "eval-<(y)~B",
        "eval-<(n)~B",
        "eval-<( )~B",
        "eval->(0)~B",
        "eval->(1)~B",
        "eval->(.)~B",
        "eval->(=)~B",
        "eval->(y)~B",
        "eval->(n)~B",
        "eval->( )~B",
        "eval-<(0)~C",
        "eval-<(1)~C",
        "eval-<(.)~C",
        "eval-<(=)~C",
        "eval-<(y)~C",
        "eval-<(n)~C",
        "eval-<( )~C",
        "eval->(0)~C",
        "eval->(1)~C",
        "eval->(.)~C",
        "eval->(=)~C",
        "eval->(y)~C",
        "eval->(n)~C",
        "eval->( )~C",
        "eval-<(0)~D",
        "eval-<(1)~D",
        "eval-<(.)~D",
        "eval-<(=)~D",
        "eval-<(y)~D",
        "eval-<(n)~D",
        "eval-<( )~D",
        "eval->(0)~D",
        "eval->(1)~D",
        "eval->(.)~D",
        "eval->(=)~D",
        "eval->(y)~D",
        "eval->(n)~D",
        "eval->( )~D",
        "eval-<(0)~E",
        "eval-<(1)~E",
        "eval-<(.)~E",
        "eval-<(=)~E",
        "eval-<(y)~E",
        "eval-<(n)~E",
        "eval-<( )~E",
        "eval->(0)~E",
        "eval->(1)~E",
        "eval->(.)~E",
        "eval->(=)~E",
        "eval->(y)~E",
        "eval->(n)~E",
        "eval->( )~E",
        "eval-<(0)~F",
        "eval-<(1)~F",
        "eval-<(.)~F",
        "eval-<(=)~F",
        "eval-<(y)~F",
        "eval-<(n)~F",
        "eval-<( )~F",
        "eval->(0)~F",
        "eval->(1)~F",
        "eval->(.)~F",
        "eval->(=)~F",
        "eval->(y)~F",
        "eval->(n)~F",
        "eval->( )~F",
        "eval-<(0)~G",
        "eval-<(1)~G",
        "eval-<(.)~G",
        "eval-<(=)~G",
        "eval-<(y)~G",
        "eval-<(n)~G",
        "eval-<( )~G",
        "eval->(0)~G",
        "eval->(1)~G",
        "eval->(.)~G",
        "eval->(=)~G",
        "eval->(y)~G",
        "eval->(n)~G",
        "eval->( )~G",
        "eval-<(0)~H",
        "eval-<(1)~H",
        "eval-<(.)~H",
        "eval-<(=)~H",
        "eval-<(y)~H",
        "eval-<(n)~H",
        "eval-<( )~H",
        "eval->(0)~H",
        "eval->(1)~H",
        "eval->(.)~H",
        "eval->(=)~H",
        "eval->(y)~H",
        "eval->(n)~H",
        "eval->( )~H",
        "eval-<(0)~I",
        "eval-<(1)~I",
        "eval-<(.)~I",
        "eval-<(=)~I",
        "eval-<(y)~I",
        "eval-<(n)~I",
        "eval-<( )~I",
        "eval->(0)~I",
        "eval->(1)~I",
        "eval->(.)~I",
        "eval->(=)~I",
        "eval->(y)~I",
        "eval->(n)~I",
        "eval->( )~I",
        "eval-<(0)~J",
        "eval-<(1)~J",
        "eval-<(.)~J",
        "eval-<(=)~J",
        "eval-<(y)~J",
        "eval-<(n)~J",
        "eval-<( )~J",
        "eval->(0)~J",
        "eval->(1)~J",
        "eval->(.)~J",
        "eval->(=)~J",
        "eval->(y)~J",
        "eval->(n)~J",
        "eval->( )~J",
        "eval-<(0)~K",
        "eval-<(1)~K",
        "eval-<(.)~K",
        "eval-<(=)~K",
        "eval-<(y)~K",
        "eval-<(n)~K",
        "eval-<( )~K",
        "eval->(0)~K",
        "eval->(1)~K",
        "eval->(.)~K",
        "eval->(=)~K",
        "eval->(y)~K",
        "eval->(n)~K",
        "eval->( )~K",
        "eval-<(0)~L",
        "eval-<(1)~L",
        "eval-<(.)~L",
        "eval-<(=)~L",
        "eval-<(y)~L",
        "eval-<(n)~L",
        "eval-<( )~L",
        "eval->(0)~L",
        "eval->(1)~L",
        "eval->(.)~L",
        "eval->(=)~L",
        "eval->(y)~L",
        "eval->(n)~L",
        "eval->( )~L",
        "eval-<(0)~Z",
        "eval-<(1)~Z",
        "eval-<(.)~Z",
        "eval-<(=)~Z",
        "eval-<(y)~Z",
        "eval-<(n)~Z",
        "eval-<( )~Z",
        "eval->(0)~Z",
        "eval->(1)~Z",
        "eval->(.)~Z",
        "eval->(=)~Z",
        "eval->(y)~Z",
        "eval->(n)~Z",
        "eval->( )~Z",
        "HALT"
    ],
    "initial": "init",
    "finals": [
        "HALT"
    ],
    "transitions": {
        "init": [
            {
                "read": "A",
                "to_state": "goto-null-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "goto-null-A": [
            {
                "read": "&",
                "to_state": "goto-null-A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-A",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-A",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-B": [
            {
                "read": "&",
                "to_state": "goto-null-B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-B",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-B",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-C": [
            {
                "read": "&",
                "to_state": "goto-null-C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-C",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-C",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-D": [
            {
                "read": "&",
                "to_state": "goto-null-D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-D",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-D",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-E": [
            {
                "read": "&",
                "to_state": "goto-null-E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-E",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-E",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-F": [
            {
                "read": "&",
                "to_state": "goto-null-F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-F",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-F",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-G": [
            {
                "read": "&",
                "to_state": "goto-null-G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-G",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-G",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-H": [
            {
                "read": "&",
                "to_state": "goto-null-H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-H",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-H",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-I": [
            {
                "read": "&",
                "to_state": "goto-null-I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-I",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-I",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-J": [
            {
                "read": "&",
                "to_state": "goto-null-J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-J",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-J",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-K": [
            {
                "read": "&",
                "to_state": "goto-null-K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-K",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-K",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-L": [
            {
                "read": "&",
                "to_state": "goto-null-L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-L",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-L",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-Z": [
            {
                "read": "&",
                "to_state": "goto-null-Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-Z",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "goto-null-Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "goto-null-Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "goto-null-Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "goto-null-Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "goto-null-Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "goto-null-Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "goto-null-Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "goto-null-Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "goto-null-Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "goto-null-Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "goto-null-Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-Z",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-state-A": [
            {
                "read": "0",
                "to_state": "init-find-A:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-B": [
            {
                "read": "0",
                "to_state": "init-find-B:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-C": [
            {
                "read": "0",
                "to_state": "init-find-C:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-D": [
            {
                "read": "0",
                "to_state": "init-find-D:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-E": [
            {
                "read": "0",
                "to_state": "init-find-E:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-E:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-F": [
            {
                "read": "0",
                "to_state": "init-find-F:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-F:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-F:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-F:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-F:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-F:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-F:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-G": [
            {
                "read": "0",
                "to_state": "init-find-G:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-G:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-G:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-G:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-G:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-G:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-G:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-H": [
            {
                "read": "0",
                "to_state": "init-find-H:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-H:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-H:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-H:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-H:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-I": [
            {
                "read": "0",
                "to_state": "init-find-I:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-I:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-I:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-I:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-I:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-I:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-I:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-J": [
            {
                "read": "0",
                "to_state": "init-find-J:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-J:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-J:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-J:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-J:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-J:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-J:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-K": [
            {
                "read": "0",
                "to_state": "init-find-K:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-K:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-K:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-K:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-K:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-K:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-K:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-L": [
            {
                "read": "0",
                "to_state": "init-find-L:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-L:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-L:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-L:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-L:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-L:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-L:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-Z": [
            {
                "read": "0",
                "to_state": "HALT",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "HALT",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "HALT",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "HALT",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "HALT",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "HALT",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "HALT",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "init-find-A:0": [
            {
                "read": ":",
                "to_state": "init-find-A:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-A:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-A:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-A:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-A:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-A:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-A:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-A:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:1": [
            {
                "read": ":",
                "to_state": "init-find-A:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-A:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-A:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-A:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-A:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-A:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-A:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-A:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:.": [
            {
                "read": ":",
                "to_state": "init-find-A:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-A:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-A:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-A:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-A:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-A:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-A:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-A:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:=": [
            {
                "read": ":",
                "to_state": "init-find-A:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-A:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-A:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-A:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-A:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-A:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-A:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-A:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:y": [
            {
                "read": ":",
                "to_state": "init-find-A:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-A:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-A:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-A:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-A:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-A:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-A:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-A:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:n": [
            {
                "read": ":",
                "to_state": "init-find-A:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-A:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-A:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-A:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-A:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-A:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-A:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-A:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A: ": [
            {
                "read": ":",
                "to_state": "init-find-A: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-A: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-A: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-A: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-A: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-A: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-A: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-A: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-A: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-A: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-A: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-A: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:0": [
            {
                "read": ":",
                "to_state": "init-find-B:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-B:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-B:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-B:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-B:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-B:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-B:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-B:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:1": [
            {
                "read": ":",
                "to_state": "init-find-B:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-B:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-B:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-B:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-B:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-B:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-B:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-B:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:.": [
            {
                "read": ":",
                "to_state": "init-find-B:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-B:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-B:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-B:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-B:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-B:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-B:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-B:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:=": [
            {
                "read": ":",
                "to_state": "init-find-B:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-B:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-B:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-B:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-B:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-B:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-B:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-B:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:y": [
            {
                "read": ":",
                "to_state": "init-find-B:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-B:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-B:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-B:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-B:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-B:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-B:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-B:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:n": [
            {
                "read": ":",
                "to_state": "init-find-B:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-B:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-B:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-B:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-B:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-B:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-B:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-B:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B: ": [
            {
                "read": ":",
                "to_state": "init-find-B: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-B: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-B: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-B: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-B: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-B: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-B: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-B: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-B: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-B: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-B: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-B: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:0": [
            {
                "read": ":",
                "to_state": "init-find-C:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-C:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-C:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-C:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-C:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-C:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-C:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:1": [
            {
                "read": ":",
                "to_state": "init-find-C:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-C:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-C:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-C:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-C:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-C:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-C:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:.": [
            {
                "read": ":",
                "to_state": "init-find-C:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-C:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-C:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-C:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-C:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-C:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-C:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:=": [
            {
                "read": ":",
                "to_state": "init-find-C:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-C:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-C:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-C:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-C:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-C:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-C:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:y": [
            {
                "read": ":",
                "to_state": "init-find-C:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-C:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-C:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-C:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-C:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-C:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-C:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:n": [
            {
                "read": ":",
                "to_state": "init-find-C:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-C:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-C:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-C:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-C:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-C:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-C:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C: ": [
            {
                "read": ":",
                "to_state": "init-find-C: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-C: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-C: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-C: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-C: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-C: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-C: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-C: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-C: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-C: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-C: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-C: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:0": [
            {
                "read": ":",
                "to_state": "init-find-D:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-D:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-D:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-D:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-D:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-D:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-D:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-D:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:1": [
            {
                "read": ":",
                "to_state": "init-find-D:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-D:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-D:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-D:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-D:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-D:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-D:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-D:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:.": [
            {
                "read": ":",
                "to_state": "init-find-D:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-D:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-D:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-D:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-D:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-D:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-D:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-D:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:=": [
            {
                "read": ":",
                "to_state": "init-find-D:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-D:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-D:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-D:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-D:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-D:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-D:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-D:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:y": [
            {
                "read": ":",
                "to_state": "init-find-D:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-D:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-D:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-D:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-D:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-D:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-D:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-D:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:n": [
            {
                "read": ":",
                "to_state": "init-find-D:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-D:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-D:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-D:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-D:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-D:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-D:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-D:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D: ": [
            {
                "read": ":",
                "to_state": "init-find-D: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-D: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-D: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-D: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-D: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-D: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-D: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-D: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-D: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-D: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-D: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-D: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:0": [
            {
                "read": ":",
                "to_state": "init-find-E:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-E:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-E:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-E:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-E:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-E:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-E:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-E:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-E:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:1": [
            {
                "read": ":",
                "to_state": "init-find-E:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-E:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-E:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-E:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-E:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-E:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-E:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-E:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-E:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:.": [
            {
                "read": ":",
                "to_state": "init-find-E:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-E:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-E:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-E:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-E:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-E:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-E:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-E:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-E:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:=": [
            {
                "read": ":",
                "to_state": "init-find-E:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-E:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-E:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-E:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-E:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-E:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-E:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-E:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-E:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:y": [
            {
                "read": ":",
                "to_state": "init-find-E:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-E:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-E:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-E:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-E:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-E:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-E:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-E:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-E:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E:n": [
            {
                "read": ":",
                "to_state": "init-find-E:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-E:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-E:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-E:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-E:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-E:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-E:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-E:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-E:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-E: ": [
            {
                "read": ":",
                "to_state": "init-find-E: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-E: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-E: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-E: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-E: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-E: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-E: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-E: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-E: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-E: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-E: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-E: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-E: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-E: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-E: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-E: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-E: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-E: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-E: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-E: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-E: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-E: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-E: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-E: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-E: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-E: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-E: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-E: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-E( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-F:0": [
            {
                "read": ":",
                "to_state": "init-find-F:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-F:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-F:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-F:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-F:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-F:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-F:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-F:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-F:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-F:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-F:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-F:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-F:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-F:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-F:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-F:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-F:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-F:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-F:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-F:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-F:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-F:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-F:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-F:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-F:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-F:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-F:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-F:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-F:1": [
            {
                "read": ":",
                "to_state": "init-find-F:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-F:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-F:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-F:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-F:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-F:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-F:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-F:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-F:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-F:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-F:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-F:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-F:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-F:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-F:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-F:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-F:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-F:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-F:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-F:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-F:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-F:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-F:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-F:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-F:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-F:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-F:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-F:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-F:.": [
            {
                "read": ":",
                "to_state": "init-find-F:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-F:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-F:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-F:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-F:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-F:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-F:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-F:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-F:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-F:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-F:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-F:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-F:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-F:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-F:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-F:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-F:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-F:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-F:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-F:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-F:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-F:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-F:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-F:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-F:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-F:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-F:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-F:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-F:=": [
            {
                "read": ":",
                "to_state": "init-find-F:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-F:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-F:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-F:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-F:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-F:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-F:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-F:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-F:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-F:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-F:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-F:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-F:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-F:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-F:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-F:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-F:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-F:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-F:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-F:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-F:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-F:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-F:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-F:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-F:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-F:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-F:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-F:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-F:y": [
            {
                "read": ":",
                "to_state": "init-find-F:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-F:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-F:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-F:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-F:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-F:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-F:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-F:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-F:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-F:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-F:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-F:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-F:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-F:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-F:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-F:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-F:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-F:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-F:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-F:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-F:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-F:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-F:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-F:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-F:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-F:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-F:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-F:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-F:n": [
            {
                "read": ":",
                "to_state": "init-find-F:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-F:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-F:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-F:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-F:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-F:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-F:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-F:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-F:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-F:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-F:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-F:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-F:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-F:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-F:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-F:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-F:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-F:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-F:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-F:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-F:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-F:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-F:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-F:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-F:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-F:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-F:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-F:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-F: ": [
            {
                "read": ":",
                "to_state": "init-find-F: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-F: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-F: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-F: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-F: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-F: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-F: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-F: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-F: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-F: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-F: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-F: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-F: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-F: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-F: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-F: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-F: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-F: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-F: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-F: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-F: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-F: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-F: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-F: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-F: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-F: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-F: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-F: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-F( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-G:0": [
            {
                "read": ":",
                "to_state": "init-find-G:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-G:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-G:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-G:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-G:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-G:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-G:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-G:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-G:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-G:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-G:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-G:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-G:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-G:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-G:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-G:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-G:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-G:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-G:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-G:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-G:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-G:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-G:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-G:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-G:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-G:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-G:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-G:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-G:1": [
            {
                "read": ":",
                "to_state": "init-find-G:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-G:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-G:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-G:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-G:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-G:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-G:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-G:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-G:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-G:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-G:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-G:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-G:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-G:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-G:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-G:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-G:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-G:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-G:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-G:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-G:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-G:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-G:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-G:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-G:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-G:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-G:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-G:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-G:.": [
            {
                "read": ":",
                "to_state": "init-find-G:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-G:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-G:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-G:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-G:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-G:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-G:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-G:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-G:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-G:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-G:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-G:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-G:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-G:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-G:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-G:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-G:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-G:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-G:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-G:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-G:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-G:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-G:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-G:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-G:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-G:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-G:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-G:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-G:=": [
            {
                "read": ":",
                "to_state": "init-find-G:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-G:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-G:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-G:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-G:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-G:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-G:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-G:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-G:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-G:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-G:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-G:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-G:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-G:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-G:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-G:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-G:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-G:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-G:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-G:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-G:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-G:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-G:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-G:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-G:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-G:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-G:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-G:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-G:y": [
            {
                "read": ":",
                "to_state": "init-find-G:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-G:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-G:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-G:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-G:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-G:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-G:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-G:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-G:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-G:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-G:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-G:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-G:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-G:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-G:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-G:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-G:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-G:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-G:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-G:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-G:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-G:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-G:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-G:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-G:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-G:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-G:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-G:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-G:n": [
            {
                "read": ":",
                "to_state": "init-find-G:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-G:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-G:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-G:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-G:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-G:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-G:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-G:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-G:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-G:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-G:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-G:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-G:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-G:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-G:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-G:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-G:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-G:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-G:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-G:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-G:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-G:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-G:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-G:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-G:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-G:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-G:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-G:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-G: ": [
            {
                "read": ":",
                "to_state": "init-find-G: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-G: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-G: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-G: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-G: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-G: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-G: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-G: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-G: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-G: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-G: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-G: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-G: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-G: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-G: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-G: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-G: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-G: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-G: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-G: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-G: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-G: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-G: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-G: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-G: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-G: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-G: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-G: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-G( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H:0": [
            {
                "read": ":",
                "to_state": "init-find-H:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-H:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-H:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-H:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-H:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-H:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-H:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-H:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-H:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-H:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-H:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-H:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-H:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-H:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-H:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-H:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-H:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H:1": [
            {
                "read": ":",
                "to_state": "init-find-H:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-H:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-H:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-H:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-H:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-H:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-H:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-H:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-H:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-H:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-H:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-H:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-H:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-H:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-H:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-H:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-H:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H:.": [
            {
                "read": ":",
                "to_state": "init-find-H:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-H:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-H:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-H:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-H:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-H:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-H:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-H:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-H:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-H:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-H:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-H:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-H:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-H:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-H:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-H:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-H:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H:=": [
            {
                "read": ":",
                "to_state": "init-find-H:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-H:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-H:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-H:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-H:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-H:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-H:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-H:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-H:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-H:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-H:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-H:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-H:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-H:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-H:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-H:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-H:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H:y": [
            {
                "read": ":",
                "to_state": "init-find-H:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-H:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-H:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-H:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-H:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-H:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-H:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-H:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-H:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-H:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-H:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-H:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-H:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-H:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-H:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-H:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-H:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H:n": [
            {
                "read": ":",
                "to_state": "init-find-H:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-H:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-H:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-H:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-H:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-H:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-H:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-H:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-H:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-H:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-H:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-H:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-H:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-H:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-H:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-H:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-H:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-H: ": [
            {
                "read": ":",
                "to_state": "init-find-H: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-H: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-H: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-H: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-H: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-H: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-H: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-H: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-H: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-H: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-H: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-H: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-H: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-H: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-H: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-H: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-H: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-H: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-H: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-H: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-H: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-H: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-H: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-H: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-H: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-H: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-H: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-H: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-H( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-I:0": [
            {
                "read": ":",
                "to_state": "init-find-I:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-I:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-I:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-I:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-I:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-I:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-I:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-I:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-I:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-I:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-I:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-I:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-I:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-I:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-I:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-I:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-I:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-I:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-I:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-I:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-I:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-I:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-I:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-I:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-I:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-I:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-I:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-I:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-I:1": [
            {
                "read": ":",
                "to_state": "init-find-I:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-I:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-I:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-I:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-I:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-I:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-I:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-I:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-I:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-I:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-I:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-I:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-I:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-I:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-I:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-I:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-I:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-I:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-I:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-I:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-I:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-I:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-I:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-I:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-I:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-I:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-I:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-I:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-I:.": [
            {
                "read": ":",
                "to_state": "init-find-I:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-I:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-I:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-I:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-I:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-I:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-I:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-I:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-I:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-I:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-I:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-I:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-I:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-I:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-I:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-I:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-I:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-I:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-I:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-I:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-I:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-I:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-I:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-I:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-I:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-I:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-I:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-I:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-I:=": [
            {
                "read": ":",
                "to_state": "init-find-I:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-I:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-I:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-I:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-I:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-I:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-I:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-I:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-I:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-I:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-I:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-I:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-I:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-I:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-I:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-I:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-I:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-I:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-I:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-I:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-I:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-I:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-I:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-I:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-I:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-I:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-I:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-I:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-I:y": [
            {
                "read": ":",
                "to_state": "init-find-I:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-I:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-I:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-I:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-I:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-I:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-I:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-I:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-I:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-I:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-I:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-I:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-I:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-I:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-I:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-I:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-I:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-I:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-I:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-I:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-I:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-I:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-I:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-I:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-I:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-I:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-I:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-I:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-I:n": [
            {
                "read": ":",
                "to_state": "init-find-I:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-I:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-I:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-I:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-I:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-I:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-I:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-I:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-I:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-I:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-I:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-I:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-I:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-I:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-I:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-I:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-I:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-I:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-I:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-I:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-I:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-I:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-I:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-I:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-I:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-I:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-I:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-I:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-I: ": [
            {
                "read": ":",
                "to_state": "init-find-I: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-I: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-I: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-I: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-I: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-I: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-I: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-I: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-I: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-I: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-I: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-I: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-I: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-I: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-I: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-I: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-I: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-I: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-I: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-I: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-I: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-I: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-I: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-I: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-I: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-I: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-I: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-I: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-I( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-J:0": [
            {
                "read": ":",
                "to_state": "init-find-J:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-J:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-J:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-J:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-J:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-J:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-J:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-J:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-J:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-J:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-J:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-J:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-J:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-J:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-J:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-J:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-J:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-J:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-J:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-J:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-J:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-J:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-J:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-J:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-J:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-J:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-J:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-J:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-J:1": [
            {
                "read": ":",
                "to_state": "init-find-J:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-J:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-J:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-J:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-J:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-J:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-J:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-J:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-J:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-J:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-J:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-J:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-J:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-J:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-J:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-J:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-J:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-J:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-J:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-J:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-J:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-J:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-J:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-J:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-J:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-J:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-J:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-J:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-J:.": [
            {
                "read": ":",
                "to_state": "init-find-J:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-J:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-J:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-J:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-J:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-J:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-J:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-J:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-J:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-J:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-J:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-J:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-J:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-J:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-J:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-J:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-J:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-J:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-J:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-J:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-J:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-J:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-J:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-J:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-J:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-J:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-J:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-J:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-J:=": [
            {
                "read": ":",
                "to_state": "init-find-J:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-J:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-J:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-J:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-J:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-J:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-J:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-J:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-J:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-J:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-J:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-J:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-J:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-J:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-J:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-J:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-J:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-J:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-J:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-J:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-J:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-J:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-J:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-J:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-J:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-J:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-J:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-J:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-J:y": [
            {
                "read": ":",
                "to_state": "init-find-J:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-J:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-J:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-J:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-J:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-J:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-J:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-J:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-J:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-J:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-J:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-J:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-J:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-J:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-J:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-J:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-J:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-J:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-J:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-J:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-J:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-J:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-J:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-J:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-J:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-J:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-J:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-J:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-J:n": [
            {
                "read": ":",
                "to_state": "init-find-J:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-J:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-J:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-J:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-J:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-J:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-J:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-J:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-J:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-J:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-J:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-J:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-J:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-J:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-J:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-J:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-J:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-J:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-J:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-J:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-J:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-J:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-J:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-J:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-J:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-J:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-J:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-J:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-J: ": [
            {
                "read": ":",
                "to_state": "init-find-J: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-J: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-J: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-J: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-J: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-J: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-J: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-J: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-J: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-J: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-J: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-J: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-J: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-J: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-J: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-J: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-J: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-J: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-J: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-J: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-J: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-J: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-J: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-J: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-J: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-J: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-J: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-J: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-J( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-K:0": [
            {
                "read": ":",
                "to_state": "init-find-K:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-K:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-K:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-K:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-K:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-K:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-K:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-K:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-K:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-K:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-K:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-K:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-K:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-K:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-K:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-K:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-K:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-K:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-K:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-K:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-K:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-K:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-K:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-K:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-K:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-K:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-K:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-K:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-K:1": [
            {
                "read": ":",
                "to_state": "init-find-K:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-K:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-K:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-K:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-K:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-K:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-K:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-K:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-K:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-K:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-K:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-K:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-K:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-K:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-K:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-K:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-K:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-K:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-K:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-K:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-K:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-K:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-K:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-K:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-K:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-K:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-K:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-K:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-K:.": [
            {
                "read": ":",
                "to_state": "init-find-K:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-K:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-K:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-K:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-K:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-K:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-K:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-K:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-K:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-K:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-K:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-K:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-K:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-K:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-K:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-K:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-K:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-K:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-K:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-K:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-K:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-K:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-K:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-K:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-K:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-K:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-K:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-K:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-K:=": [
            {
                "read": ":",
                "to_state": "init-find-K:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-K:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-K:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-K:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-K:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-K:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-K:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-K:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-K:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-K:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-K:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-K:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-K:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-K:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-K:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-K:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-K:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-K:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-K:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-K:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-K:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-K:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-K:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-K:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-K:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-K:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-K:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-K:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-K:y": [
            {
                "read": ":",
                "to_state": "init-find-K:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-K:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-K:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-K:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-K:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-K:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-K:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-K:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-K:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-K:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-K:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-K:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-K:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-K:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-K:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-K:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-K:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-K:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-K:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-K:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-K:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-K:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-K:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-K:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-K:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-K:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-K:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-K:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-K:n": [
            {
                "read": ":",
                "to_state": "init-find-K:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-K:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-K:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-K:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-K:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-K:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-K:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-K:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-K:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-K:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-K:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-K:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-K:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-K:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-K:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-K:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-K:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-K:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-K:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-K:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-K:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-K:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-K:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-K:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-K:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-K:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-K:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-K:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-K: ": [
            {
                "read": ":",
                "to_state": "init-find-K: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-K: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-K: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-K: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-K: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-K: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-K: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-K: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-K: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-K: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-K: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-K: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-K: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-K: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-K: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-K: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-K: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-K: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-K: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-K: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-K: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-K: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-K: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-K: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-K: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-K: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-K: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-K: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-K( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-L:0": [
            {
                "read": ":",
                "to_state": "init-find-L:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-L:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-L:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-L:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-L:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-L:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-L:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-L:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-L:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-L:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-L:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-L:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-L:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-L:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-L:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-L:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-L:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-L:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-L:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-L:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-L:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-L:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-L:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-L:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-L:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-L:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-L:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-L:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-L:1": [
            {
                "read": ":",
                "to_state": "init-find-L:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-L:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-L:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-L:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-L:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-L:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-L:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-L:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-L:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-L:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-L:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-L:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-L:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-L:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-L:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-L:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-L:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-L:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-L:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-L:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-L:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-L:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-L:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-L:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-L:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-L:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-L:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-L:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-L:.": [
            {
                "read": ":",
                "to_state": "init-find-L:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-L:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-L:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-L:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-L:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-L:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-L:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-L:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-L:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-L:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-L:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-L:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-L:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-L:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-L:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-L:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-L:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-L:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-L:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-L:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-L:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-L:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-L:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-L:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-L:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-L:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-L:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-L:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-L:=": [
            {
                "read": ":",
                "to_state": "init-find-L:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-L:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-L:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-L:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-L:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-L:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-L:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-L:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-L:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-L:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-L:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-L:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-L:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-L:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-L:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-L:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-L:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-L:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-L:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-L:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-L:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-L:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-L:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-L:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-L:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-L:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-L:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-L:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-L:y": [
            {
                "read": ":",
                "to_state": "init-find-L:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-L:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-L:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-L:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-L:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-L:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-L:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-L:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-L:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-L:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-L:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-L:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-L:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-L:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-L:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-L:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-L:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-L:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-L:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-L:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-L:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-L:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-L:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-L:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-L:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-L:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-L:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-L:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-L:n": [
            {
                "read": ":",
                "to_state": "init-find-L:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-L:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-L:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-L:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-L:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-L:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-L:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-L:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-L:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-L:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-L:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-L:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-L:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-L:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-L:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-L:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-L:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-L:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-L:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-L:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-L:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-L:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-L:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-L:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-L:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-L:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-L:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-L:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-L: ": [
            {
                "read": ":",
                "to_state": "init-find-L: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-L: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-L: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-L: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-L: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-L: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-L: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-L: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-L: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-L: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-L: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-L: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-L: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-L: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-L: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-L: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-L: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-L: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-L: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-L: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-L: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-L: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-L: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-L: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-L: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-L: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-L: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-L: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-L( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:0": [
            {
                "read": ":",
                "to_state": "init-find-Z:0",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:0",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:0",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:0",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:0",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:0",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:0",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:0",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:0",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:0",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:0",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:0",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:0",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-Z:0",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-Z:0",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-Z:0",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-Z:0",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-Z:0",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-Z:0",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-Z:0",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:0",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:0",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:0",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:0",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z:0",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:0",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:0",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:0",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(0)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:1": [
            {
                "read": ":",
                "to_state": "init-find-Z:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:1",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-Z:1",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-Z:1",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-Z:1",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-Z:1",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-Z:1",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-Z:1",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-Z:1",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:1",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:1",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:1",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:.": [
            {
                "read": ":",
                "to_state": "init-find-Z:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:.",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-Z:.",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-Z:.",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-Z:.",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-Z:.",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-Z:.",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-Z:.",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-Z:.",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:.",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:.",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:.",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:=": [
            {
                "read": ":",
                "to_state": "init-find-Z:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:=",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-Z:=",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-Z:=",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-Z:=",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-Z:=",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-Z:=",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-Z:=",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-Z:=",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:=",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:=",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:=",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:y": [
            {
                "read": ":",
                "to_state": "init-find-Z:y",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:y",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:y",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:y",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:y",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:y",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:y",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:y",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:y",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:y",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:y",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:y",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:y",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-Z:y",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-Z:y",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-Z:y",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-Z:y",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-Z:y",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-Z:y",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-Z:y",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:y",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:y",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:y",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:y",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z:y",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:y",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:y",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:y",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(y)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:n": [
            {
                "read": ":",
                "to_state": "init-find-Z:n",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:n",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:n",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:n",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:n",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:n",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:n",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:n",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:n",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:n",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:n",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:n",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z:n",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-Z:n",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-Z:n",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-Z:n",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-Z:n",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-Z:n",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-Z:n",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-Z:n",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:n",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z:n",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:n",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:n",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z:n",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z:n",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z:n",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:n",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(n)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z: ": [
            {
                "read": ":",
                "to_state": "init-find-Z: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "E",
                "to_state": "init-find-Z: ",
                "write": "E",
                "action": "LEFT"
            },
            {
                "read": "F",
                "to_state": "init-find-Z: ",
                "write": "F",
                "action": "LEFT"
            },
            {
                "read": "G",
                "to_state": "init-find-Z: ",
                "write": "G",
                "action": "LEFT"
            },
            {
                "read": "H",
                "to_state": "init-find-Z: ",
                "write": "H",
                "action": "LEFT"
            },
            {
                "read": "I",
                "to_state": "init-find-Z: ",
                "write": "I",
                "action": "LEFT"
            },
            {
                "read": "J",
                "to_state": "init-find-Z: ",
                "write": "J",
                "action": "LEFT"
            },
            {
                "read": "K",
                "to_state": "init-find-Z: ",
                "write": "K",
                "action": "LEFT"
            },
            {
                "read": "L",
                "to_state": "init-find-Z: ",
                "write": "L",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "0",
                "to_state": "init-find-Z: ",
                "write": "0",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": "y",
                "to_state": "init-find-Z: ",
                "write": "y",
                "action": "LEFT"
            },
            {
                "read": "n",
                "to_state": "init-find-Z: ",
                "write": "n",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "find-state-A(0)": [
            {
                "read": "0",
                "to_state": "find-state-A(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(1)": [
            {
                "read": "0",
                "to_state": "find-state-A(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(.)": [
            {
                "read": "0",
                "to_state": "find-state-A(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(=)": [
            {
                "read": "0",
                "to_state": "find-state-A(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(y)": [
            {
                "read": "0",
                "to_state": "find-state-A(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(n)": [
            {
                "read": "0",
                "to_state": "find-state-A(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A( )": [
            {
                "read": "0",
                "to_state": "find-state-A( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(0)": [
            {
                "read": "0",
                "to_state": "find-state-B(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(1)": [
            {
                "read": "0",
                "to_state": "find-state-B(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(.)": [
            {
                "read": "0",
                "to_state": "find-state-B(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(=)": [
            {
                "read": "0",
                "to_state": "find-state-B(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(y)": [
            {
                "read": "0",
                "to_state": "find-state-B(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(n)": [
            {
                "read": "0",
                "to_state": "find-state-B(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B( )": [
            {
                "read": "0",
                "to_state": "find-state-B( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(0)": [
            {
                "read": "0",
                "to_state": "find-state-C(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(1)": [
            {
                "read": "0",
                "to_state": "find-state-C(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(.)": [
            {
                "read": "0",
                "to_state": "find-state-C(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(=)": [
            {
                "read": "0",
                "to_state": "find-state-C(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(y)": [
            {
                "read": "0",
                "to_state": "find-state-C(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(n)": [
            {
                "read": "0",
                "to_state": "find-state-C(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C( )": [
            {
                "read": "0",
                "to_state": "find-state-C( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(0)": [
            {
                "read": "0",
                "to_state": "find-state-D(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(1)": [
            {
                "read": "0",
                "to_state": "find-state-D(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(.)": [
            {
                "read": "0",
                "to_state": "find-state-D(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(=)": [
            {
                "read": "0",
                "to_state": "find-state-D(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(y)": [
            {
                "read": "0",
                "to_state": "find-state-D(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(n)": [
            {
                "read": "0",
                "to_state": "find-state-D(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D( )": [
            {
                "read": "0",
                "to_state": "find-state-D( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(0)": [
            {
                "read": "0",
                "to_state": "find-state-E(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(1)": [
            {
                "read": "0",
                "to_state": "find-state-E(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(.)": [
            {
                "read": "0",
                "to_state": "find-state-E(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(=)": [
            {
                "read": "0",
                "to_state": "find-state-E(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(y)": [
            {
                "read": "0",
                "to_state": "find-state-E(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E(n)": [
            {
                "read": "0",
                "to_state": "find-state-E(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-E( )": [
            {
                "read": "0",
                "to_state": "find-state-E( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "check-op-E( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-F(0)": [
            {
                "read": "0",
                "to_state": "find-state-F(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "check-op-F(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-F(1)": [
            {
                "read": "0",
                "to_state": "find-state-F(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "check-op-F(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-F(.)": [
            {
                "read": "0",
                "to_state": "find-state-F(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "check-op-F(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-F(=)": [
            {
                "read": "0",
                "to_state": "find-state-F(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "check-op-F(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-F(y)": [
            {
                "read": "0",
                "to_state": "find-state-F(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "check-op-F(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-F(n)": [
            {
                "read": "0",
                "to_state": "find-state-F(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "check-op-F(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-F( )": [
            {
                "read": "0",
                "to_state": "find-state-F( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "check-op-F( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-G(0)": [
            {
                "read": "0",
                "to_state": "find-state-G(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "check-op-G(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-G(1)": [
            {
                "read": "0",
                "to_state": "find-state-G(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "check-op-G(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-G(.)": [
            {
                "read": "0",
                "to_state": "find-state-G(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "check-op-G(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-G(=)": [
            {
                "read": "0",
                "to_state": "find-state-G(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "check-op-G(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-G(y)": [
            {
                "read": "0",
                "to_state": "find-state-G(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "check-op-G(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-G(n)": [
            {
                "read": "0",
                "to_state": "find-state-G(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "check-op-G(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-G( )": [
            {
                "read": "0",
                "to_state": "find-state-G( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "check-op-G( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-H(0)": [
            {
                "read": "0",
                "to_state": "find-state-H(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-H(1)": [
            {
                "read": "0",
                "to_state": "find-state-H(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-H(.)": [
            {
                "read": "0",
                "to_state": "find-state-H(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-H(=)": [
            {
                "read": "0",
                "to_state": "find-state-H(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-H(y)": [
            {
                "read": "0",
                "to_state": "find-state-H(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-H(n)": [
            {
                "read": "0",
                "to_state": "find-state-H(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-H( )": [
            {
                "read": "0",
                "to_state": "find-state-H( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "check-op-H( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-I(0)": [
            {
                "read": "0",
                "to_state": "find-state-I(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "check-op-I(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-I(1)": [
            {
                "read": "0",
                "to_state": "find-state-I(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "check-op-I(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-I(.)": [
            {
                "read": "0",
                "to_state": "find-state-I(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "check-op-I(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-I(=)": [
            {
                "read": "0",
                "to_state": "find-state-I(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "check-op-I(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-I(y)": [
            {
                "read": "0",
                "to_state": "find-state-I(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "check-op-I(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-I(n)": [
            {
                "read": "0",
                "to_state": "find-state-I(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "check-op-I(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-I( )": [
            {
                "read": "0",
                "to_state": "find-state-I( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "check-op-I( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-J(0)": [
            {
                "read": "0",
                "to_state": "find-state-J(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "check-op-J(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-J(1)": [
            {
                "read": "0",
                "to_state": "find-state-J(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "check-op-J(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-J(.)": [
            {
                "read": "0",
                "to_state": "find-state-J(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "check-op-J(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-J(=)": [
            {
                "read": "0",
                "to_state": "find-state-J(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "check-op-J(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-J(y)": [
            {
                "read": "0",
                "to_state": "find-state-J(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "check-op-J(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-J(n)": [
            {
                "read": "0",
                "to_state": "find-state-J(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "check-op-J(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-J( )": [
            {
                "read": "0",
                "to_state": "find-state-J( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "check-op-J( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-K(0)": [
            {
                "read": "0",
                "to_state": "find-state-K(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "check-op-K(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-K(1)": [
            {
                "read": "0",
                "to_state": "find-state-K(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "check-op-K(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-K(.)": [
            {
                "read": "0",
                "to_state": "find-state-K(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "check-op-K(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-K(=)": [
            {
                "read": "0",
                "to_state": "find-state-K(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "check-op-K(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-K(y)": [
            {
                "read": "0",
                "to_state": "find-state-K(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "check-op-K(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-K(n)": [
            {
                "read": "0",
                "to_state": "find-state-K(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "check-op-K(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-K( )": [
            {
                "read": "0",
                "to_state": "find-state-K( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "check-op-K( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-L(0)": [
            {
                "read": "0",
                "to_state": "find-state-L(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "check-op-L(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(0)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-L(1)": [
            {
                "read": "0",
                "to_state": "find-state-L(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "check-op-L(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-L(.)": [
            {
                "read": "0",
                "to_state": "find-state-L(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "check-op-L(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-L(=)": [
            {
                "read": "0",
                "to_state": "find-state-L(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "check-op-L(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-L(y)": [
            {
                "read": "0",
                "to_state": "find-state-L(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "check-op-L(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(y)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-L(n)": [
            {
                "read": "0",
                "to_state": "find-state-L(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "check-op-L(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(n)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-L( )": [
            {
                "read": "0",
                "to_state": "find-state-L( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "check-op-L( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(0)": [
            {
                "read": "0",
                "to_state": "find-state-Z(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(0)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(0)",
                "write": "L",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(1)": [
            {
                "read": "0",
                "to_state": "find-state-Z(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(1)",
                "write": "L",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(.)": [
            {
                "read": "0",
                "to_state": "find-state-Z(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(.)",
                "write": "L",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(=)": [
            {
                "read": "0",
                "to_state": "find-state-Z(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(=)",
                "write": "L",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(y)": [
            {
                "read": "0",
                "to_state": "find-state-Z(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(y)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(y)",
                "write": "L",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(n)": [
            {
                "read": "0",
                "to_state": "find-state-Z(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(n)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(n)",
                "write": "L",
                "action": "RIGHT"
            }
        ],
        "find-state-Z( )": [
            {
                "read": "0",
                "to_state": "find-state-Z( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z( )",
                "write": "L",
                "action": "RIGHT"
            }
        ],
        "check-op-A(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A( )": [
            {
                "read": "{",
                "to_state": "cmp-read-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-A( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-A( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-A( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-A( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-A( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-A( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-A( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-A( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-A( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-A( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-A( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B( )": [
            {
                "read": "{",
                "to_state": "cmp-read-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-B( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-B( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-B( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-B( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-B( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-B( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-B( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-B( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-B( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-B( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-B( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C( )": [
            {
                "read": "{",
                "to_state": "cmp-read-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-C( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-C( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-C( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-C( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-C( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-C( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-C( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-C( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-C( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-C( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-C( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D( )": [
            {
                "read": "{",
                "to_state": "cmp-read-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-D( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-D( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-D( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-D( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-D( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-D( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-D( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-D( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-D( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-D( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-D( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-E(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-E( )": [
            {
                "read": "{",
                "to_state": "cmp-read-E( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-E( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-E( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-E( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-E( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-E( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-E( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-E( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-E( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-E( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-E( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-E( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-E( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-E( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-E( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-E( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-E( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-E( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-E( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-E( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-E( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-E( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-E( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-E( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-E( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-E( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-E( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-E( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-E( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-E( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-F(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-F(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-F(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-F(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-F(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-F(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-F(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-F(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-F(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-F(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-F(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-F(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-F(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-F(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-F(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-F(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-F(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-F(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-F(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-F(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-F(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-F(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-F(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-F(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-F(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-F(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-F(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-F(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-F(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-F(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-F( )": [
            {
                "read": "{",
                "to_state": "cmp-read-F( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-F( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-F( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-F( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-F( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-F( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-F( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-F( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-F( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-F( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-F( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-F( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-F( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-F( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-F( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-F( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-F( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-F( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-F( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-F( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-F( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-F( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-F( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-F( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-F( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-F( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-F( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-F( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-F( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-F( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-G(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-G(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-G(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-G(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-G(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-G(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-G(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-G(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-G(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-G(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-G(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-G(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-G(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-G(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-G(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-G(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-G(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-G(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-G(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-G(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-G(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-G(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-G(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-G(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-G(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-G(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-G(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-G(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-G(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-G(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-G( )": [
            {
                "read": "{",
                "to_state": "cmp-read-G( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-G( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-G( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-G( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-G( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-G( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-G( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-G( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-G( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-G( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-G( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-G( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-G( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-G( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-G( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-G( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-G( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-G( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-G( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-G( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-G( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-G( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-G( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-G( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-G( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-G( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-G( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-G( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-G( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-G( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-H(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-H(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-H(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-H(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-H(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-H(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-H(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-H(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-H(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-H(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-H(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-H(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-H(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-H(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-H(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-H(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-H(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-H(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-H( )": [
            {
                "read": "{",
                "to_state": "cmp-read-H( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-H( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-H( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-H( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-H( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-H( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-H( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-H( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-H( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-H( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-H( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-H( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-H( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-H( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-H( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-H( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-H( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-H( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-H( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-H( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-H( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-H( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-H( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-H( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-H( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-H( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-H( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-H( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-H( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-H( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-I(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-I(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-I(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-I(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-I(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-I(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-I(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-I(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-I(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-I(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-I(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-I(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-I(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-I(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-I(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-I(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-I(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-I(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-I(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-I(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-I(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-I(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-I(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-I(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-I(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-I(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-I(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-I(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-I(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-I(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-I( )": [
            {
                "read": "{",
                "to_state": "cmp-read-I( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-I( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-I( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-I( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-I( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-I( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-I( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-I( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-I( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-I( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-I( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-I( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-I( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-I( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-I( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-I( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-I( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-I( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-I( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-I( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-I( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-I( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-I( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-I( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-I( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-I( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-I( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-I( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-I( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-I( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-J(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-J(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-J(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-J(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-J(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-J(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-J(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-J(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-J(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-J(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-J(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-J(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-J(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-J(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-J(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-J(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-J(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-J(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-J(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-J(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-J(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-J(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-J(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-J(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-J(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-J(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-J(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-J(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-J(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-J(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-J( )": [
            {
                "read": "{",
                "to_state": "cmp-read-J( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-J( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-J( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-J( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-J( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-J( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-J( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-J( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-J( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-J( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-J( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-J( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-J( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-J( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-J( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-J( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-J( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-J( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-J( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-J( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-J( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-J( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-J( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-J( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-J( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-J( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-J( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-J( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-J( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-J( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-K(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-K(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-K(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-K(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-K(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-K(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-K(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-K(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-K(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-K(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-K(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-K(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-K(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-K(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-K(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-K(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-K(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-K(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-K(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-K(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-K(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-K(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-K(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-K(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-K(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-K(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-K(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-K(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-K(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-K(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-K( )": [
            {
                "read": "{",
                "to_state": "cmp-read-K( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-K( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-K( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-K( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-K( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-K( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-K( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-K( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-K( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-K( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-K( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-K( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-K( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-K( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-K( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-K( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-K( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-K( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-K( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-K( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-K( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-K( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-K( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-K( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-K( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-K( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-K( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-K( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-K( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-K( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-L(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-L(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-L(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-L(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-L(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-L(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-L(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-L(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-L(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-L(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-L(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-L(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-L(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-L(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-L(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-L(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-L(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-L(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-L(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-L(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-L(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-L(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-L(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-L(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-L(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-L(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-L(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-L(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-L(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-L(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-L( )": [
            {
                "read": "{",
                "to_state": "cmp-read-L( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-L( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-L( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-L( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-L( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-L( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-L( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-L( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-L( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-L( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-L( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-L( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-L( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-L( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-L( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-L( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-L( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-L( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-L( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-L( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-L( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-L( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-L( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-L( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-L( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-L( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-L( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-L( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-L( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-L( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(0)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(y)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(n)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z( )": [
            {
                "read": "{",
                "to_state": "cmp-read-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "find-state-Z( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "find-state-Z( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "find-state-Z( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "find-state-Z( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "find-state-Z( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "find-state-Z( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "find-state-Z( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "find-state-Z( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "find-state-Z( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "find-state-Z( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "find-state-Z( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A( )": [
            {
                "read": "[",
                "to_state": "cmp-read-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B( )": [
            {
                "read": "[",
                "to_state": "cmp-read-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C( )": [
            {
                "read": "[",
                "to_state": "cmp-read-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D( )": [
            {
                "read": "[",
                "to_state": "cmp-read-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-E(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-E( )": [
            {
                "read": "[",
                "to_state": "cmp-read-E( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-E( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-E( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-F(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-F(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-F(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-F(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-F(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-F(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-F(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-F(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-F(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-F(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-F(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-F(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-F(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-F(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-F(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-F(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-F(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-F(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-F(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-F(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-F(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-F(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-F(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-F(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-F( )": [
            {
                "read": "[",
                "to_state": "cmp-read-F( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-F( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-F( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-G(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-G(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-G(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-G(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-G(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-G(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-G(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-G(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-G(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-G(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-G(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-G(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-G(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-G(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-G(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-G(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-G(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-G(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-G(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-G(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-G(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-G(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-G(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-G(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-G( )": [
            {
                "read": "[",
                "to_state": "cmp-read-G( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-G( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-G( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-H(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-H(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-H(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-H(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-H(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-H(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-H(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-H(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-H(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-H(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-H(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-H(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-H( )": [
            {
                "read": "[",
                "to_state": "cmp-read-H( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-H( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-H( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-I(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-I(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-I(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-I(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-I(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-I(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-I(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-I(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-I(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-I(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-I(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-I(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-I(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-I(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-I(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-I(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-I(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-I(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-I(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-I(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-I(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-I(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-I(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-I(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-I( )": [
            {
                "read": "[",
                "to_state": "cmp-read-I( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-I( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-I( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-J(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-J(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-J(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-J(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-J(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-J(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-J(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-J(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-J(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-J(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-J(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-J(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-J(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-J(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-J(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-J(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-J(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-J(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-J(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-J(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-J(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-J(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-J(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-J(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-J( )": [
            {
                "read": "[",
                "to_state": "cmp-read-J( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-J( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-J( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-K(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-K(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-K(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-K(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-K(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-K(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-K(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-K(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-K(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-K(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-K(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-K(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-K(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-K(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-K(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-K(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-K(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-K(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-K(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-K(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-K(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-K(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-K(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-K(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-K( )": [
            {
                "read": "[",
                "to_state": "cmp-read-K( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-K( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-K( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-L(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-L(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-L(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-L(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-L(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-L(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-L(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-L(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-L(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-L(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-L(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-L(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-L(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-L(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-L(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-L(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-L(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-L(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-L(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-L(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-L(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-L(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-L(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-L(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-L( )": [
            {
                "read": "[",
                "to_state": "cmp-read-L( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-L( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-L( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(0)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "get-state-0",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(0)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(y)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "get-state-y",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(y)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(n)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "get-state-n",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(n)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z( )": [
            {
                "read": "[",
                "to_state": "cmp-read-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z( )",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "get-state-0": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "get-dir-F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "get-dir-G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "get-dir-I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "get-dir-J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "get-dir-K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "get-dir-L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-1": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "get-dir-F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "get-dir-G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "get-dir-I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "get-dir-J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "get-dir-K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "get-dir-L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-.": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "get-dir-F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "get-dir-G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "get-dir-I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "get-dir-J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "get-dir-K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "get-dir-L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-=": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "get-dir-F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "get-dir-G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "get-dir-I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "get-dir-J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "get-dir-K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "get-dir-L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-y": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "get-dir-F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "get-dir-G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "get-dir-I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "get-dir-J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "get-dir-K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "get-dir-L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-n": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "get-dir-F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "get-dir-G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "get-dir-I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "get-dir-J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "get-dir-K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "get-dir-L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state- ": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "get-dir-E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "get-dir-F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "get-dir-G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "get-dir-H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "get-dir-I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "get-dir-J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "get-dir-K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "get-dir-L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-dir-A": [
            {
                "read": "<",
                "to_state": "get-write-A:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-A:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-B": [
            {
                "read": "<",
                "to_state": "get-write-B:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-B:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-C": [
            {
                "read": "<",
                "to_state": "get-write-C:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-C:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-D": [
            {
                "read": "<",
                "to_state": "get-write-D:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-D:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-E": [
            {
                "read": "<",
                "to_state": "get-write-E:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-E:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-F": [
            {
                "read": "<",
                "to_state": "get-write-F:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-F:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-G": [
            {
                "read": "<",
                "to_state": "get-write-G:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-G:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-H": [
            {
                "read": "<",
                "to_state": "get-write-H:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-H:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-I": [
            {
                "read": "<",
                "to_state": "get-write-I:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-I:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-J": [
            {
                "read": "<",
                "to_state": "get-write-J:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-J:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-K": [
            {
                "read": "<",
                "to_state": "get-write-K:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-K:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-L": [
            {
                "read": "<",
                "to_state": "get-write-L:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-L:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-Z": [
            {
                "read": "<",
                "to_state": "get-write-Z:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-Z:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-write-A:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~A",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-A:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~A",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-B:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~B",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-B:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~B",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-C:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-C:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-D:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~D",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-D:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~D",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-E:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~E",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-E:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~E",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-F:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~F",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-F:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~F",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-G:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~G",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-G:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~G",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-H:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~H",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-H:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~H",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-I:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~I",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-I:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~I",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-J:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~J",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-J:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~J",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-K:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~K",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-K:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~K",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-L:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~L",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-L:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~L",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-Z:<": [
            {
                "read": "0",
                "to_state": "eval-<(0)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~Z",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-Z:>": [
            {
                "read": "0",
                "to_state": "eval->(0)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~Z",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A( )": [
            {
                "read": "]",
                "to_state": "cmp-read-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-A( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-A( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-A( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-A( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-A( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-A( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-A( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-A( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-A( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-A( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-A( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B( )": [
            {
                "read": "]",
                "to_state": "cmp-read-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-B( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-B( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-B( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-B( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-B( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-B( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-B( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-B( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-B( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-B( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-B( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C( )": [
            {
                "read": "]",
                "to_state": "cmp-read-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-C( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-C( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-C( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-C( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-C( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-C( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-C( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-C( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-C( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-C( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-C( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D( )": [
            {
                "read": "]",
                "to_state": "cmp-read-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-D( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-D( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-D( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-D( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-D( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-D( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-D( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-D( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-D( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-D( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-D( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-E(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-E( )": [
            {
                "read": "]",
                "to_state": "cmp-read-E( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-E( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-E( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-E( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-E( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-E( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-E( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-E( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-E( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-E( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-E( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-E( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-E( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-E( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-E( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-E( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-E( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-E( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-E( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-E( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-E( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-E( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-E( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-E( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-E( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-E( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-E( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-E( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-F(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-F(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-F(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-F(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-F(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-F(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-F(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-F(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-F(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-F(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-F(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-F(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-F(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-F(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-F(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-F(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-F(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-F(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-F( )": [
            {
                "read": "]",
                "to_state": "cmp-read-F( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-F( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-F( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-F( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-F( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-F( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-F( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-F( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-F( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-F( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-F( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-F( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-F( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-F( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-F( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-F( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-F( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-F( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-F( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-F( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-F( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-F( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-F( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-F( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-F( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-F( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-F( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-F( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-G(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-G(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-G(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-G(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-G(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-G(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-G(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-G(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-G(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-G(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-G(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-G(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-G(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-G(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-G(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-G(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-G(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-G(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-G( )": [
            {
                "read": "]",
                "to_state": "cmp-read-G( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-G( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-G( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-G( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-G( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-G( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-G( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-G( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-G( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-G( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-G( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-G( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-G( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-G( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-G( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-G( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-G( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-G( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-G( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-G( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-G( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-G( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-G( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-G( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-G( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-G( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-G( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-G( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-H(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-H(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-H(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-H(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-H(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-H(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-H( )": [
            {
                "read": "]",
                "to_state": "cmp-read-H( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-H( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-H( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-H( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-H( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-H( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-H( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-H( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-H( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-H( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-H( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-H( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-H( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-H( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-H( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-H( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-H( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-H( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-H( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-H( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-H( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-H( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-H( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-H( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-H( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-H( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-H( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-H( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-I(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-I(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-I(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-I(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-I(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-I(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-I(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-I(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-I(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-I(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-I(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-I(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-I(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-I(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-I(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-I(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-I(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-I(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-I( )": [
            {
                "read": "]",
                "to_state": "cmp-read-I( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-I( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-I( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-I( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-I( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-I( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-I( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-I( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-I( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-I( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-I( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-I( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-I( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-I( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-I( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-I( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-I( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-I( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-I( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-I( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-I( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-I( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-I( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-I( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-I( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-I( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-I( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-I( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-J(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-J(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-J(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-J(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-J(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-J(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-J(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-J(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-J(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-J(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-J(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-J(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-J(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-J(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-J(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-J(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-J(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-J(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-J( )": [
            {
                "read": "]",
                "to_state": "cmp-read-J( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-J( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-J( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-J( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-J( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-J( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-J( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-J( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-J( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-J( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-J( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-J( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-J( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-J( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-J( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-J( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-J( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-J( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-J( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-J( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-J( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-J( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-J( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-J( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-J( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-J( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-J( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-J( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-K(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-K(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-K(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-K(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-K(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-K(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-K(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-K(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-K(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-K(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-K(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-K(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-K(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-K(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-K(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-K(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-K(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-K(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-K( )": [
            {
                "read": "]",
                "to_state": "cmp-read-K( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-K( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-K( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-K( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-K( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-K( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-K( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-K( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-K( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-K( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-K( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-K( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-K( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-K( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-K( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-K( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-K( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-K( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-K( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-K( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-K( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-K( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-K( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-K( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-K( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-K( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-K( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-K( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-L(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-L(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-L(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-L(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-L(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-L(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-L(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-L(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-L(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-L(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-L(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-L(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-L(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-L(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-L(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-L(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-L(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-L(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-L( )": [
            {
                "read": "]",
                "to_state": "cmp-read-L( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-L( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-L( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-L( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-L( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-L( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-L( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-L( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-L( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-L( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-L( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-L( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-L( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-L( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-L( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-L( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-L( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-L( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-L( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-L( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-L( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-L( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-L( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-L( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-L( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-L( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-L( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-L( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(0)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(0)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(0)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(0)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(0)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(0)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(0)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(0)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(0)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(0)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(0)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(0)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(0)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(0)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(0)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(0)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(0)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(0)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(0)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(0)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(0)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(0)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(0)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(0)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(0)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(0)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(0)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(0)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(0)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(1)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(1)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(1)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(1)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(1)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(1)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(1)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(1)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(1)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(1)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(1)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(.)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(.)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(.)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(.)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(.)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(.)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(.)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(.)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(.)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(.)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(.)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(=)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(=)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(=)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(=)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(=)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(=)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(=)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(=)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(=)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(=)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(=)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(y)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(y)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(y)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(y)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(y)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(y)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(y)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(y)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(y)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(y)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(y)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(y)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(y)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(y)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(y)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(y)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(y)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(y)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(y)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(y)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(y)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(y)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(y)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(y)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(y)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(y)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(y)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(y)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(y)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(n)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(n)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(n)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(n)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(n)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(n)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(n)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(n)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(n)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(n)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(n)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(n)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(n)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z(n)",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z(n)",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z(n)",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z(n)",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z(n)",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z(n)",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z(n)",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z(n)",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(n)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z(n)",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(n)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(n)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(n)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z(n)",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z(n)",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(n)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z( )": [
            {
                "read": "]",
                "to_state": "cmp-read-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "to-next-trans-Z( )",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "to-next-trans-Z( )",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "to-next-trans-Z( )",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "to-next-trans-Z( )",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "to-next-trans-Z( )",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "to-next-trans-Z( )",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "to-next-trans-Z( )",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "to-next-trans-Z( )",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "to-next-trans-Z( )",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "to-next-trans-Z( )",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "to-next-trans-Z( )",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~A": [
            {
                "read": "&",
                "to_state": "eval-<(0)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~A": [
            {
                "read": "&",
                "to_state": "eval-<(1)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~A": [
            {
                "read": "&",
                "to_state": "eval-<(.)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~A": [
            {
                "read": "&",
                "to_state": "eval-<(=)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~A": [
            {
                "read": "&",
                "to_state": "eval-<(y)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~A": [
            {
                "read": "&",
                "to_state": "eval-<(n)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~A": [
            {
                "read": "&",
                "to_state": "eval-<( )~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~A": [
            {
                "read": "&",
                "to_state": "eval->(0)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~A": [
            {
                "read": "&",
                "to_state": "eval->(1)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~A": [
            {
                "read": "&",
                "to_state": "eval->(.)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~A": [
            {
                "read": "&",
                "to_state": "eval->(=)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~A": [
            {
                "read": "&",
                "to_state": "eval->(y)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~A": [
            {
                "read": "&",
                "to_state": "eval->(n)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~A": [
            {
                "read": "&",
                "to_state": "eval->( )~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~A",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~A",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~A",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~A",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~A",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~A",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~A",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~A",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~A",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~A",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~A",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~B": [
            {
                "read": "&",
                "to_state": "eval-<(0)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~B": [
            {
                "read": "&",
                "to_state": "eval-<(1)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~B": [
            {
                "read": "&",
                "to_state": "eval-<(.)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~B": [
            {
                "read": "&",
                "to_state": "eval-<(=)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~B": [
            {
                "read": "&",
                "to_state": "eval-<(y)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~B": [
            {
                "read": "&",
                "to_state": "eval-<(n)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~B": [
            {
                "read": "&",
                "to_state": "eval-<( )~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~B": [
            {
                "read": "&",
                "to_state": "eval->(0)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~B": [
            {
                "read": "&",
                "to_state": "eval->(1)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~B": [
            {
                "read": "&",
                "to_state": "eval->(.)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~B": [
            {
                "read": "&",
                "to_state": "eval->(=)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~B": [
            {
                "read": "&",
                "to_state": "eval->(y)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~B": [
            {
                "read": "&",
                "to_state": "eval->(n)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~B": [
            {
                "read": "&",
                "to_state": "eval->( )~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~B",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~B",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~B",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~B",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~B",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~B",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~B",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~B",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~B",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~B",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~B",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~C": [
            {
                "read": "&",
                "to_state": "eval-<(0)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~C": [
            {
                "read": "&",
                "to_state": "eval-<(1)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~C": [
            {
                "read": "&",
                "to_state": "eval-<(.)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~C": [
            {
                "read": "&",
                "to_state": "eval-<(=)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~C": [
            {
                "read": "&",
                "to_state": "eval-<(y)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~C": [
            {
                "read": "&",
                "to_state": "eval-<(n)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~C": [
            {
                "read": "&",
                "to_state": "eval-<( )~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~C": [
            {
                "read": "&",
                "to_state": "eval->(0)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~C": [
            {
                "read": "&",
                "to_state": "eval->(1)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~C": [
            {
                "read": "&",
                "to_state": "eval->(.)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~C": [
            {
                "read": "&",
                "to_state": "eval->(=)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~C": [
            {
                "read": "&",
                "to_state": "eval->(y)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~C": [
            {
                "read": "&",
                "to_state": "eval->(n)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~C": [
            {
                "read": "&",
                "to_state": "eval->( )~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~C",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~C",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~C",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~C",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~C",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~C",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~C",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~C",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~C",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~C",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~C",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~D": [
            {
                "read": "&",
                "to_state": "eval-<(0)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~D": [
            {
                "read": "&",
                "to_state": "eval-<(1)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~D": [
            {
                "read": "&",
                "to_state": "eval-<(.)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~D": [
            {
                "read": "&",
                "to_state": "eval-<(=)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~D": [
            {
                "read": "&",
                "to_state": "eval-<(y)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~D": [
            {
                "read": "&",
                "to_state": "eval-<(n)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~D": [
            {
                "read": "&",
                "to_state": "eval-<( )~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~D": [
            {
                "read": "&",
                "to_state": "eval->(0)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~D": [
            {
                "read": "&",
                "to_state": "eval->(1)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~D": [
            {
                "read": "&",
                "to_state": "eval->(.)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~D": [
            {
                "read": "&",
                "to_state": "eval->(=)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~D": [
            {
                "read": "&",
                "to_state": "eval->(y)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~D": [
            {
                "read": "&",
                "to_state": "eval->(n)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~D": [
            {
                "read": "&",
                "to_state": "eval->( )~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~D",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~D",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~D",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~D",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~D",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~D",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~D",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~D",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~D",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~D",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~D",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~E": [
            {
                "read": "&",
                "to_state": "eval-<(0)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~E": [
            {
                "read": "&",
                "to_state": "eval-<(1)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~E": [
            {
                "read": "&",
                "to_state": "eval-<(.)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~E": [
            {
                "read": "&",
                "to_state": "eval-<(=)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~E": [
            {
                "read": "&",
                "to_state": "eval-<(y)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~E": [
            {
                "read": "&",
                "to_state": "eval-<(n)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~E": [
            {
                "read": "&",
                "to_state": "eval-<( )~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~E": [
            {
                "read": "&",
                "to_state": "eval->(0)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~E": [
            {
                "read": "&",
                "to_state": "eval->(1)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~E": [
            {
                "read": "&",
                "to_state": "eval->(.)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~E": [
            {
                "read": "&",
                "to_state": "eval->(=)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~E": [
            {
                "read": "&",
                "to_state": "eval->(y)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~E": [
            {
                "read": "&",
                "to_state": "eval->(n)~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~E": [
            {
                "read": "&",
                "to_state": "eval->( )~E",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~E",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~E",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~E",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~E",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~E",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~E",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~E",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~E",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~E",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~E",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~E",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~E",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~E",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~E",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~E",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~E",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~E",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~E",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~E",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~E",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~E",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~E",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~E",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~E",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~E",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~E",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~E",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-E",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~F": [
            {
                "read": "&",
                "to_state": "eval-<(0)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~F": [
            {
                "read": "&",
                "to_state": "eval-<(1)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~F": [
            {
                "read": "&",
                "to_state": "eval-<(.)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~F": [
            {
                "read": "&",
                "to_state": "eval-<(=)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~F": [
            {
                "read": "&",
                "to_state": "eval-<(y)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~F": [
            {
                "read": "&",
                "to_state": "eval-<(n)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~F": [
            {
                "read": "&",
                "to_state": "eval-<( )~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~F": [
            {
                "read": "&",
                "to_state": "eval->(0)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~F": [
            {
                "read": "&",
                "to_state": "eval->(1)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~F": [
            {
                "read": "&",
                "to_state": "eval->(.)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~F": [
            {
                "read": "&",
                "to_state": "eval->(=)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~F": [
            {
                "read": "&",
                "to_state": "eval->(y)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~F": [
            {
                "read": "&",
                "to_state": "eval->(n)~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~F": [
            {
                "read": "&",
                "to_state": "eval->( )~F",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~F",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~F",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~F",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~F",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~F",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~F",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~F",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~F",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~F",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~F",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~F",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~F",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~F",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~F",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~F",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~F",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~F",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~F",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~F",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~F",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~F",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~F",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~F",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~F",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~F",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~F",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~F",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-F",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~G": [
            {
                "read": "&",
                "to_state": "eval-<(0)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~G": [
            {
                "read": "&",
                "to_state": "eval-<(1)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~G": [
            {
                "read": "&",
                "to_state": "eval-<(.)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~G": [
            {
                "read": "&",
                "to_state": "eval-<(=)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~G": [
            {
                "read": "&",
                "to_state": "eval-<(y)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~G": [
            {
                "read": "&",
                "to_state": "eval-<(n)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~G": [
            {
                "read": "&",
                "to_state": "eval-<( )~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~G": [
            {
                "read": "&",
                "to_state": "eval->(0)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~G": [
            {
                "read": "&",
                "to_state": "eval->(1)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~G": [
            {
                "read": "&",
                "to_state": "eval->(.)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~G": [
            {
                "read": "&",
                "to_state": "eval->(=)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~G": [
            {
                "read": "&",
                "to_state": "eval->(y)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~G": [
            {
                "read": "&",
                "to_state": "eval->(n)~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~G": [
            {
                "read": "&",
                "to_state": "eval->( )~G",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~G",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~G",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~G",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~G",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~G",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~G",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~G",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~G",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~G",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~G",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~G",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~G",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~G",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~G",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~G",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~G",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~G",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~G",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~G",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~G",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~G",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~G",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~G",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~G",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~G",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~G",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~G",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-G",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~H": [
            {
                "read": "&",
                "to_state": "eval-<(0)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~H": [
            {
                "read": "&",
                "to_state": "eval-<(1)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~H": [
            {
                "read": "&",
                "to_state": "eval-<(.)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~H": [
            {
                "read": "&",
                "to_state": "eval-<(=)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~H": [
            {
                "read": "&",
                "to_state": "eval-<(y)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~H": [
            {
                "read": "&",
                "to_state": "eval-<(n)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~H": [
            {
                "read": "&",
                "to_state": "eval-<( )~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~H": [
            {
                "read": "&",
                "to_state": "eval->(0)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~H": [
            {
                "read": "&",
                "to_state": "eval->(1)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~H": [
            {
                "read": "&",
                "to_state": "eval->(.)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~H": [
            {
                "read": "&",
                "to_state": "eval->(=)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~H": [
            {
                "read": "&",
                "to_state": "eval->(y)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~H": [
            {
                "read": "&",
                "to_state": "eval->(n)~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~H": [
            {
                "read": "&",
                "to_state": "eval->( )~H",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~H",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~H",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~H",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~H",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~H",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~H",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~H",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~H",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~H",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~H",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~H",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~H",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~H",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~H",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~H",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~H",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~H",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~H",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~H",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~H",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~H",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~H",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~H",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~H",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~H",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~H",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~H",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-H",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~I": [
            {
                "read": "&",
                "to_state": "eval-<(0)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~I": [
            {
                "read": "&",
                "to_state": "eval-<(1)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~I": [
            {
                "read": "&",
                "to_state": "eval-<(.)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~I": [
            {
                "read": "&",
                "to_state": "eval-<(=)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~I": [
            {
                "read": "&",
                "to_state": "eval-<(y)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~I": [
            {
                "read": "&",
                "to_state": "eval-<(n)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~I": [
            {
                "read": "&",
                "to_state": "eval-<( )~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~I": [
            {
                "read": "&",
                "to_state": "eval->(0)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~I": [
            {
                "read": "&",
                "to_state": "eval->(1)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~I": [
            {
                "read": "&",
                "to_state": "eval->(.)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~I": [
            {
                "read": "&",
                "to_state": "eval->(=)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~I": [
            {
                "read": "&",
                "to_state": "eval->(y)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~I": [
            {
                "read": "&",
                "to_state": "eval->(n)~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~I": [
            {
                "read": "&",
                "to_state": "eval->( )~I",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~I",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~I",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~I",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~I",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~I",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~I",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~I",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~I",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~I",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~I",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~I",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~I",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~I",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~I",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~I",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~I",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~I",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~I",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~I",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~I",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~I",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~I",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~I",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~I",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~I",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~I",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~I",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-I",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~J": [
            {
                "read": "&",
                "to_state": "eval-<(0)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~J": [
            {
                "read": "&",
                "to_state": "eval-<(1)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~J": [
            {
                "read": "&",
                "to_state": "eval-<(.)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~J": [
            {
                "read": "&",
                "to_state": "eval-<(=)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~J": [
            {
                "read": "&",
                "to_state": "eval-<(y)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~J": [
            {
                "read": "&",
                "to_state": "eval-<(n)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~J": [
            {
                "read": "&",
                "to_state": "eval-<( )~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~J": [
            {
                "read": "&",
                "to_state": "eval->(0)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~J": [
            {
                "read": "&",
                "to_state": "eval->(1)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~J": [
            {
                "read": "&",
                "to_state": "eval->(.)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~J": [
            {
                "read": "&",
                "to_state": "eval->(=)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~J": [
            {
                "read": "&",
                "to_state": "eval->(y)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~J": [
            {
                "read": "&",
                "to_state": "eval->(n)~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~J": [
            {
                "read": "&",
                "to_state": "eval->( )~J",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~J",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~J",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~J",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~J",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~J",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~J",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~J",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~J",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~J",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~J",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~J",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~J",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~J",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~J",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~J",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~J",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~J",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~J",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~J",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~J",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~J",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~J",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~J",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~J",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~J",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~J",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~J",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-J",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~K": [
            {
                "read": "&",
                "to_state": "eval-<(0)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~K": [
            {
                "read": "&",
                "to_state": "eval-<(1)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~K": [
            {
                "read": "&",
                "to_state": "eval-<(.)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~K": [
            {
                "read": "&",
                "to_state": "eval-<(=)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~K": [
            {
                "read": "&",
                "to_state": "eval-<(y)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~K": [
            {
                "read": "&",
                "to_state": "eval-<(n)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~K": [
            {
                "read": "&",
                "to_state": "eval-<( )~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~K": [
            {
                "read": "&",
                "to_state": "eval->(0)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~K": [
            {
                "read": "&",
                "to_state": "eval->(1)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~K": [
            {
                "read": "&",
                "to_state": "eval->(.)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~K": [
            {
                "read": "&",
                "to_state": "eval->(=)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~K": [
            {
                "read": "&",
                "to_state": "eval->(y)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~K": [
            {
                "read": "&",
                "to_state": "eval->(n)~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~K": [
            {
                "read": "&",
                "to_state": "eval->( )~K",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~K",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~K",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~K",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~K",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~K",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~K",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~K",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~K",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~K",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~K",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~K",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~K",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~K",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~K",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~K",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~K",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~K",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~K",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~K",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~K",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~K",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~K",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~K",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~K",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~K",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~K",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~K",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-K",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~L": [
            {
                "read": "&",
                "to_state": "eval-<(0)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~L": [
            {
                "read": "&",
                "to_state": "eval-<(1)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~L": [
            {
                "read": "&",
                "to_state": "eval-<(.)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~L": [
            {
                "read": "&",
                "to_state": "eval-<(=)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~L": [
            {
                "read": "&",
                "to_state": "eval-<(y)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~L": [
            {
                "read": "&",
                "to_state": "eval-<(n)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~L": [
            {
                "read": "&",
                "to_state": "eval-<( )~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~L": [
            {
                "read": "&",
                "to_state": "eval->(0)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~L": [
            {
                "read": "&",
                "to_state": "eval->(1)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~L": [
            {
                "read": "&",
                "to_state": "eval->(.)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~L": [
            {
                "read": "&",
                "to_state": "eval->(=)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~L": [
            {
                "read": "&",
                "to_state": "eval->(y)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~L": [
            {
                "read": "&",
                "to_state": "eval->(n)~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~L": [
            {
                "read": "&",
                "to_state": "eval->( )~L",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~L",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~L",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~L",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~L",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~L",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~L",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~L",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~L",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~L",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~L",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~L",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~L",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~L",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~L",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~L",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~L",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~L",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~L",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~L",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~L",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~L",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~L",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~L",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~L",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~L",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~L",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~L",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-L",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(0)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(0)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(0)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(0)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(0)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(0)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(0)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(0)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(0)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(0)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(0)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(0)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(0)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(0)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(0)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(0)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(0)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(0)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(0)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(0)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(0)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(0)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(0)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(0)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(0)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(0)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(0)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(0)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(0)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "0",
                "action": "LEFT"
            }
        ],
        "eval-<(1)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(1)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(1)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(1)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(1)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(1)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(1)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(1)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(1)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(1)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(1)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(1)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(1)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(.)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(.)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(.)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(.)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(.)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(.)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(.)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(.)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(.)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(.)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(.)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(.)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(=)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(=)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(=)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(=)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(=)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(=)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(=)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(=)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(=)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(=)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(=)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(=)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<(y)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(y)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(y)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(y)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(y)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(y)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(y)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(y)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(y)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(y)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(y)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(y)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(y)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(y)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(y)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(y)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(y)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(y)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(y)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(y)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(y)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(y)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(y)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(y)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(y)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(y)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(y)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(y)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(y)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "y",
                "action": "LEFT"
            }
        ],
        "eval-<(n)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(n)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(n)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(n)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(n)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(n)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(n)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(n)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(n)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(n)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(n)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(n)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(n)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<(n)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<(n)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<(n)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<(n)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<(n)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<(n)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<(n)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<(n)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(n)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<(n)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(n)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(n)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(n)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<(n)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<(n)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(n)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "n",
                "action": "LEFT"
            }
        ],
        "eval-<( )~Z": [
            {
                "read": "&",
                "to_state": "eval-<( )~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval-<( )~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval-<( )~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval-<( )~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval-<( )~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval-<( )~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval-<( )~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval-<( )~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval-<( )~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval-<( )~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval-<( )~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval-<( )~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(0)~Z": [
            {
                "read": "&",
                "to_state": "eval->(0)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(0)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(0)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(0)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(0)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(0)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(0)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(0)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(0)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(0)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(0)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(0)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(0)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(0)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(0)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(0)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(0)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(0)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(0)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(0)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(0)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(0)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(0)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(0)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(0)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(0)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(0)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(0)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "0",
                "action": "RIGHT"
            }
        ],
        "eval->(1)~Z": [
            {
                "read": "&",
                "to_state": "eval->(1)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(1)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(1)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(1)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(1)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(1)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(1)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(1)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(1)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(1)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(1)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(1)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~Z": [
            {
                "read": "&",
                "to_state": "eval->(.)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(.)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(.)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(.)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(.)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(.)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(.)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(.)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(.)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(.)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(.)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(.)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~Z": [
            {
                "read": "&",
                "to_state": "eval->(=)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(=)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(=)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(=)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(=)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(=)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(=)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(=)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(=)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(=)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(=)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(=)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->(y)~Z": [
            {
                "read": "&",
                "to_state": "eval->(y)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(y)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(y)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(y)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(y)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(y)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(y)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(y)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(y)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(y)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(y)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(y)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(y)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(y)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(y)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(y)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(y)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(y)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(y)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(y)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(y)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(y)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(y)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(y)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(y)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(y)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(y)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(y)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "y",
                "action": "RIGHT"
            }
        ],
        "eval->(n)~Z": [
            {
                "read": "&",
                "to_state": "eval->(n)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(n)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(n)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(n)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(n)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(n)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(n)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(n)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(n)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(n)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(n)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(n)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->(n)~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->(n)~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->(n)~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->(n)~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->(n)~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->(n)~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->(n)~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->(n)~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(n)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->(n)~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(n)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(n)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(n)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->(n)~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->(n)~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(n)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "n",
                "action": "RIGHT"
            }
        ],
        "eval->( )~Z": [
            {
                "read": "&",
                "to_state": "eval->( )~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "E",
                "to_state": "eval->( )~Z",
                "write": "E",
                "action": "RIGHT"
            },
            {
                "read": "F",
                "to_state": "eval->( )~Z",
                "write": "F",
                "action": "RIGHT"
            },
            {
                "read": "G",
                "to_state": "eval->( )~Z",
                "write": "G",
                "action": "RIGHT"
            },
            {
                "read": "H",
                "to_state": "eval->( )~Z",
                "write": "H",
                "action": "RIGHT"
            },
            {
                "read": "I",
                "to_state": "eval->( )~Z",
                "write": "I",
                "action": "RIGHT"
            },
            {
                "read": "J",
                "to_state": "eval->( )~Z",
                "write": "J",
                "action": "RIGHT"
            },
            {
                "read": "K",
                "to_state": "eval->( )~Z",
                "write": "K",
                "action": "RIGHT"
            },
            {
                "read": "L",
                "to_state": "eval->( )~Z",
                "write": "L",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "0",
                "to_state": "eval->( )~Z",
                "write": "0",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "y",
                "to_state": "eval->( )~Z",
                "write": "y",
                "action": "RIGHT"
            },
            {
                "read": "n",
                "to_state": "eval->( )~Z",
                "write": "n",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": " ",
                "action": "RIGHT"
            }
        ]
    }
}