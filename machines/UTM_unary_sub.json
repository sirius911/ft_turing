{
    "name": "UTM_unary_sub",
    "alphabet": [
        "&",
        ":",
        "^",
        "{",
        "}",
        "[",
        "]",
        "<",
        ">",
        "A",
        "B",
        "C",
        "D",
        "Z",
        "1",
        ".",
        "-",
        "=",
        " "
    ],
    "blank": " ",
    "states": [
        "init",
        "goto-null-A",
        "goto-null-B",
        "goto-null-C",
        "goto-null-D",
        "goto-null-Z",
        "goto-state-A",
        "goto-state-B",
        "goto-state-C",
        "goto-state-D",
        "goto-state-Z",
        "init-find-A:1",
        "init-find-A:.",
        "init-find-A:-",
        "init-find-A:=",
        "init-find-A: ",
        "init-find-B:1",
        "init-find-B:.",
        "init-find-B:-",
        "init-find-B:=",
        "init-find-B: ",
        "init-find-C:1",
        "init-find-C:.",
        "init-find-C:-",
        "init-find-C:=",
        "init-find-C: ",
        "init-find-D:1",
        "init-find-D:.",
        "init-find-D:-",
        "init-find-D:=",
        "init-find-D: ",
        "init-find-Z:1",
        "init-find-Z:.",
        "init-find-Z:-",
        "init-find-Z:=",
        "init-find-Z: ",
        "find-state-A(1)",
        "find-state-A(.)",
        "find-state-A(-)",
        "find-state-A(=)",
        "find-state-A( )",
        "find-state-B(1)",
        "find-state-B(.)",
        "find-state-B(-)",
        "find-state-B(=)",
        "find-state-B( )",
        "find-state-C(1)",
        "find-state-C(.)",
        "find-state-C(-)",
        "find-state-C(=)",
        "find-state-C( )",
        "find-state-D(1)",
        "find-state-D(.)",
        "find-state-D(-)",
        "find-state-D(=)",
        "find-state-D( )",
        "find-state-Z(1)",
        "find-state-Z(.)",
        "find-state-Z(-)",
        "find-state-Z(=)",
        "find-state-Z( )",
        "check-op-A(1)",
        "check-op-A(.)",
        "check-op-A(-)",
        "check-op-A(=)",
        "check-op-A( )",
        "check-op-B(1)",
        "check-op-B(.)",
        "check-op-B(-)",
        "check-op-B(=)",
        "check-op-B( )",
        "check-op-C(1)",
        "check-op-C(.)",
        "check-op-C(-)",
        "check-op-C(=)",
        "check-op-C( )",
        "check-op-D(1)",
        "check-op-D(.)",
        "check-op-D(-)",
        "check-op-D(=)",
        "check-op-D( )",
        "check-op-Z(1)",
        "check-op-Z(.)",
        "check-op-Z(-)",
        "check-op-Z(=)",
        "check-op-Z( )",
        "cmp-read-A(1)",
        "cmp-read-A(.)",
        "cmp-read-A(-)",
        "cmp-read-A(=)",
        "cmp-read-A( )",
        "cmp-read-B(1)",
        "cmp-read-B(.)",
        "cmp-read-B(-)",
        "cmp-read-B(=)",
        "cmp-read-B( )",
        "cmp-read-C(1)",
        "cmp-read-C(.)",
        "cmp-read-C(-)",
        "cmp-read-C(=)",
        "cmp-read-C( )",
        "cmp-read-D(1)",
        "cmp-read-D(.)",
        "cmp-read-D(-)",
        "cmp-read-D(=)",
        "cmp-read-D( )",
        "cmp-read-Z(1)",
        "cmp-read-Z(.)",
        "cmp-read-Z(-)",
        "cmp-read-Z(=)",
        "cmp-read-Z( )",
        "get-state-1",
        "get-state-.",
        "get-state--",
        "get-state-=",
        "get-state- ",
        "get-dir-A",
        "get-dir-B",
        "get-dir-C",
        "get-dir-D",
        "get-dir-Z",
        "get-write-A:<",
        "get-write-A:>",
        "get-write-B:<",
        "get-write-B:>",
        "get-write-C:<",
        "get-write-C:>",
        "get-write-D:<",
        "get-write-D:>",
        "get-write-Z:<",
        "get-write-Z:>",
        "to-next-trans-A(1)",
        "to-next-trans-A(.)",
        "to-next-trans-A(-)",
        "to-next-trans-A(=)",
        "to-next-trans-A( )",
        "to-next-trans-B(1)",
        "to-next-trans-B(.)",
        "to-next-trans-B(-)",
        "to-next-trans-B(=)",
        "to-next-trans-B( )",
        "to-next-trans-C(1)",
        "to-next-trans-C(.)",
        "to-next-trans-C(-)",
        "to-next-trans-C(=)",
        "to-next-trans-C( )",
        "to-next-trans-D(1)",
        "to-next-trans-D(.)",
        "to-next-trans-D(-)",
        "to-next-trans-D(=)",
        "to-next-trans-D( )",
        "to-next-trans-Z(1)",
        "to-next-trans-Z(.)",
        "to-next-trans-Z(-)",
        "to-next-trans-Z(=)",
        "to-next-trans-Z( )",
        "eval-<(1)~A",
        "eval-<(.)~A",
        "eval-<(-)~A",
        "eval-<(=)~A",
        "eval-<( )~A",
        "eval->(1)~A",
        "eval->(.)~A",
        "eval->(-)~A",
        "eval->(=)~A",
        "eval->( )~A",
        "eval-<(1)~B",
        "eval-<(.)~B",
        "eval-<(-)~B",
        "eval-<(=)~B",
        "eval-<( )~B",
        "eval->(1)~B",
        "eval->(.)~B",
        "eval->(-)~B",
        "eval->(=)~B",
        "eval->( )~B",
        "eval-<(1)~C",
        "eval-<(.)~C",
        "eval-<(-)~C",
        "eval-<(=)~C",
        "eval-<( )~C",
        "eval->(1)~C",
        "eval->(.)~C",
        "eval->(-)~C",
        "eval->(=)~C",
        "eval->( )~C",
        "eval-<(1)~D",
        "eval-<(.)~D",
        "eval-<(-)~D",
        "eval-<(=)~D",
        "eval-<( )~D",
        "eval->(1)~D",
        "eval->(.)~D",
        "eval->(-)~D",
        "eval->(=)~D",
        "eval->( )~D",
        "eval-<(1)~Z",
        "eval-<(.)~Z",
        "eval-<(-)~Z",
        "eval-<(=)~Z",
        "eval-<( )~Z",
        "eval->(1)~Z",
        "eval->(.)~Z",
        "eval->(-)~Z",
        "eval->(=)~Z",
        "eval->( )~Z",
        "HALT"
    ],
    "initial": "init",
    "finals": [
        "HALT"
    ],
    "transitions": {
        "init": [
            {
                "read": "A",
                "to_state": "goto-null-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "goto-null-A": [
            {
                "read": "&",
                "to_state": "goto-null-A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-A",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "goto-null-A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-A",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-B": [
            {
                "read": "&",
                "to_state": "goto-null-B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-B",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "goto-null-B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-B",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-C": [
            {
                "read": "&",
                "to_state": "goto-null-C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-C",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "goto-null-C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-C",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-D": [
            {
                "read": "&",
                "to_state": "goto-null-D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-D",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "goto-null-D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-D",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-null-Z": [
            {
                "read": "&",
                "to_state": "goto-null-Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-null-Z",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "goto-null-Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "goto-null-Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "goto-null-Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "goto-null-Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "goto-null-Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "goto-null-Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "goto-null-Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "goto-null-Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "goto-null-Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "goto-null-Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "goto-null-Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "goto-null-Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "goto-null-Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "goto-null-Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "goto-null-Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "goto-null-Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "goto-state-Z",
                "write": ":",
                "action": "RIGHT"
            }
        ],
        "goto-state-A": [
            {
                "read": "1",
                "to_state": "init-find-A:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-A:-",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-B": [
            {
                "read": "1",
                "to_state": "init-find-B:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-B:-",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-C": [
            {
                "read": "1",
                "to_state": "init-find-C:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-C:-",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-D": [
            {
                "read": "1",
                "to_state": "init-find-D:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-D:-",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:.",
                "write": "^",
                "action": "LEFT"
            }
        ],
        "goto-state-Z": [
            {
                "read": "1",
                "to_state": "HALT",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "HALT",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "HALT",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "HALT",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "HALT",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "init-find-A:1": [
            {
                "read": ":",
                "to_state": "init-find-A:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-A:1",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:.": [
            {
                "read": ":",
                "to_state": "init-find-A:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-A:.",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:-": [
            {
                "read": ":",
                "to_state": "init-find-A:-",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:-",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:-",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:-",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:-",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:-",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:-",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:-",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:-",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:-",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:-",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:-",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:-",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:-",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:-",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-A:-",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:-",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:-",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(-)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A:=": [
            {
                "read": ":",
                "to_state": "init-find-A:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-A:=",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-A: ": [
            {
                "read": ":",
                "to_state": "init-find-A: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-A: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-A: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-A: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-A: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-A: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-A: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-A: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-A: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-A: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-A: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-A: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-A: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-A: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-A: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-A: ",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-A: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-A: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-A( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:1": [
            {
                "read": ":",
                "to_state": "init-find-B:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-B:1",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:.": [
            {
                "read": ":",
                "to_state": "init-find-B:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-B:.",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:-": [
            {
                "read": ":",
                "to_state": "init-find-B:-",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:-",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:-",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:-",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:-",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:-",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:-",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:-",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:-",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:-",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:-",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:-",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:-",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:-",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:-",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-B:-",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:-",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:-",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(-)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B:=": [
            {
                "read": ":",
                "to_state": "init-find-B:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-B:=",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-B: ": [
            {
                "read": ":",
                "to_state": "init-find-B: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-B: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-B: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-B: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-B: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-B: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-B: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-B: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-B: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-B: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-B: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-B: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-B: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-B: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-B: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-B: ",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-B: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-B: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-B( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:1": [
            {
                "read": ":",
                "to_state": "init-find-C:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-C:1",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:.": [
            {
                "read": ":",
                "to_state": "init-find-C:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-C:.",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:-": [
            {
                "read": ":",
                "to_state": "init-find-C:-",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:-",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:-",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:-",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:-",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:-",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:-",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:-",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:-",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:-",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:-",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:-",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:-",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:-",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:-",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-C:-",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:-",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:-",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(-)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C:=": [
            {
                "read": ":",
                "to_state": "init-find-C:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-C:=",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-C: ": [
            {
                "read": ":",
                "to_state": "init-find-C: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-C: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-C: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-C: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-C: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-C: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-C: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-C: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-C: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-C: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-C: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-C: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-C: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-C: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-C: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-C: ",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-C: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-C: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:1": [
            {
                "read": ":",
                "to_state": "init-find-D:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-D:1",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:.": [
            {
                "read": ":",
                "to_state": "init-find-D:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-D:.",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:-": [
            {
                "read": ":",
                "to_state": "init-find-D:-",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:-",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:-",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:-",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:-",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:-",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:-",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:-",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:-",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:-",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:-",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:-",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:-",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:-",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:-",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-D:-",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:-",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:-",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(-)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D:=": [
            {
                "read": ":",
                "to_state": "init-find-D:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-D:=",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-D: ": [
            {
                "read": ":",
                "to_state": "init-find-D: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-D: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-D: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-D: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-D: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-D: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-D: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-D: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-D: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-D: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-D: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-D: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-D: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-D: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-D: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-D: ",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-D: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-D: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-D( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:1": [
            {
                "read": ":",
                "to_state": "init-find-Z:1",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:1",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:1",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:1",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:1",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:1",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:1",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:1",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:1",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:1",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:1",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:1",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:1",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:1",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:1",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-Z:1",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z:1",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:1",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(1)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:.": [
            {
                "read": ":",
                "to_state": "init-find-Z:.",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:.",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:.",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:.",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:.",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:.",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:.",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:.",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:.",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:.",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:.",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:.",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:.",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:.",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:.",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-Z:.",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z:.",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:.",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(.)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:-": [
            {
                "read": ":",
                "to_state": "init-find-Z:-",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:-",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:-",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:-",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:-",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:-",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:-",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:-",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:-",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:-",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:-",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:-",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:-",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:-",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:-",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-Z:-",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z:-",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:-",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(-)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z:=": [
            {
                "read": ":",
                "to_state": "init-find-Z:=",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z:=",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z:=",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z:=",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z:=",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z:=",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z:=",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z:=",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z:=",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z:=",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z:=",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z:=",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z:=",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z:=",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z:=",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-Z:=",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z:=",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z:=",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(=)",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "init-find-Z: ": [
            {
                "read": ":",
                "to_state": "init-find-Z: ",
                "write": ":",
                "action": "LEFT"
            },
            {
                "read": "^",
                "to_state": "init-find-Z: ",
                "write": "^",
                "action": "LEFT"
            },
            {
                "read": "{",
                "to_state": "init-find-Z: ",
                "write": "{",
                "action": "LEFT"
            },
            {
                "read": "}",
                "to_state": "init-find-Z: ",
                "write": "}",
                "action": "LEFT"
            },
            {
                "read": "[",
                "to_state": "init-find-Z: ",
                "write": "[",
                "action": "LEFT"
            },
            {
                "read": "]",
                "to_state": "init-find-Z: ",
                "write": "]",
                "action": "LEFT"
            },
            {
                "read": "<",
                "to_state": "init-find-Z: ",
                "write": "<",
                "action": "LEFT"
            },
            {
                "read": ">",
                "to_state": "init-find-Z: ",
                "write": ">",
                "action": "LEFT"
            },
            {
                "read": "A",
                "to_state": "init-find-Z: ",
                "write": "A",
                "action": "LEFT"
            },
            {
                "read": "B",
                "to_state": "init-find-Z: ",
                "write": "B",
                "action": "LEFT"
            },
            {
                "read": "C",
                "to_state": "init-find-Z: ",
                "write": "C",
                "action": "LEFT"
            },
            {
                "read": "D",
                "to_state": "init-find-Z: ",
                "write": "D",
                "action": "LEFT"
            },
            {
                "read": "Z",
                "to_state": "init-find-Z: ",
                "write": "Z",
                "action": "LEFT"
            },
            {
                "read": "1",
                "to_state": "init-find-Z: ",
                "write": "1",
                "action": "LEFT"
            },
            {
                "read": ".",
                "to_state": "init-find-Z: ",
                "write": ".",
                "action": "LEFT"
            },
            {
                "read": "-",
                "to_state": "init-find-Z: ",
                "write": "-",
                "action": "LEFT"
            },
            {
                "read": "=",
                "to_state": "init-find-Z: ",
                "write": "=",
                "action": "LEFT"
            },
            {
                "read": " ",
                "to_state": "init-find-Z: ",
                "write": " ",
                "action": "LEFT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z( )",
                "write": "&",
                "action": "RIGHT"
            }
        ],
        "find-state-A(1)": [
            {
                "read": "1",
                "to_state": "find-state-A(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-A(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(.)": [
            {
                "read": "1",
                "to_state": "find-state-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-A(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(-)": [
            {
                "read": "1",
                "to_state": "find-state-A(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-A(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(-)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(-)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A(=)": [
            {
                "read": "1",
                "to_state": "find-state-A(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-A(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-A( )": [
            {
                "read": "1",
                "to_state": "find-state-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-A( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "check-op-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(1)": [
            {
                "read": "1",
                "to_state": "find-state-B(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-B(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(.)": [
            {
                "read": "1",
                "to_state": "find-state-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-B(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(-)": [
            {
                "read": "1",
                "to_state": "find-state-B(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-B(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(-)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(-)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B(=)": [
            {
                "read": "1",
                "to_state": "find-state-B(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-B(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-B( )": [
            {
                "read": "1",
                "to_state": "find-state-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-B( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "check-op-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(1)": [
            {
                "read": "1",
                "to_state": "find-state-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-C(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(.)": [
            {
                "read": "1",
                "to_state": "find-state-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-C(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(-)": [
            {
                "read": "1",
                "to_state": "find-state-C(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-C(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(-)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(-)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C(=)": [
            {
                "read": "1",
                "to_state": "find-state-C(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-C(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-C( )": [
            {
                "read": "1",
                "to_state": "find-state-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-C( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "check-op-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(1)": [
            {
                "read": "1",
                "to_state": "find-state-D(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-D(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(1)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(.)": [
            {
                "read": "1",
                "to_state": "find-state-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-D(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(.)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(-)": [
            {
                "read": "1",
                "to_state": "find-state-D(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-D(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(-)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(-)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D(=)": [
            {
                "read": "1",
                "to_state": "find-state-D(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-D(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(=)",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-D( )": [
            {
                "read": "1",
                "to_state": "find-state-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-D( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "check-op-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D( )",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(1)": [
            {
                "read": "1",
                "to_state": "find-state-Z(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-Z(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(1)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(1)",
                "write": "D",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(.)": [
            {
                "read": "1",
                "to_state": "find-state-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-Z(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(.)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(.)",
                "write": "D",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(-)": [
            {
                "read": "1",
                "to_state": "find-state-Z(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-Z(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(-)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(-)",
                "write": "D",
                "action": "RIGHT"
            }
        ],
        "find-state-Z(=)": [
            {
                "read": "1",
                "to_state": "find-state-Z(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-Z(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(=)",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(=)",
                "write": "D",
                "action": "RIGHT"
            }
        ],
        "find-state-Z( )": [
            {
                "read": "1",
                "to_state": "find-state-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-Z( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z( )",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "check-op-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z( )",
                "write": "D",
                "action": "RIGHT"
            }
        ],
        "check-op-A(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-A(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-A(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(-)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-A(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-A(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-A(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-A( )": [
            {
                "read": "{",
                "to_state": "cmp-read-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-A( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-A( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-A( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-A( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-A( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-A( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-B(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-B(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(-)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-B(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-B(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-B(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-B( )": [
            {
                "read": "{",
                "to_state": "cmp-read-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-B( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-B( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-B( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-B( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-B( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-B( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-C(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-C(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(-)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-C(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-C(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-C(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-C( )": [
            {
                "read": "{",
                "to_state": "cmp-read-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-C( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-C( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-C( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-C( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-C( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-D(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-D(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(-)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-D(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-D(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-D(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-D( )": [
            {
                "read": "{",
                "to_state": "cmp-read-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-D( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-D( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-D( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-D( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-D( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-D( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(1)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-Z(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(.)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-Z(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(-)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-Z(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z(=)": [
            {
                "read": "{",
                "to_state": "cmp-read-Z(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-Z(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "check-op-Z( )": [
            {
                "read": "{",
                "to_state": "cmp-read-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "find-state-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "find-state-Z( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "find-state-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "find-state-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "find-state-Z( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "find-state-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "find-state-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "find-state-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "find-state-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "find-state-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "find-state-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "find-state-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "find-state-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "find-state-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "find-state-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "find-state-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "find-state-Z( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "find-state-Z( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "find-state-Z( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-A(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-A(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(-)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "get-state--",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-A(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-A(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-A( )": [
            {
                "read": "[",
                "to_state": "cmp-read-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-A( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-A( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A( )",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-B(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-B(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(-)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "get-state--",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-B(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-B(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-B( )": [
            {
                "read": "[",
                "to_state": "cmp-read-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-B( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-B( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B( )",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-C(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-C(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(-)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "get-state--",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-C(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-C(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-C( )": [
            {
                "read": "[",
                "to_state": "cmp-read-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-C( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-C( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C( )",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-D(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-D(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(-)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "get-state--",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-D(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-D(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-D( )": [
            {
                "read": "[",
                "to_state": "cmp-read-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-D( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-D( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D( )",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(1)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "get-state-1",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(1)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-Z(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(.)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "get-state-.",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(.)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-Z(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(-)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "get-state--",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(-)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z(=)": [
            {
                "read": "[",
                "to_state": "cmp-read-Z(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "get-state-=",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z(=)",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-Z(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "cmp-read-Z( )": [
            {
                "read": "[",
                "to_state": "cmp-read-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "get-state- ",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "to-next-trans-Z( )",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "to-next-trans-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-Z( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z( )",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "get-state-1": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-.": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state--": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state-=": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-state- ": [
            {
                "read": "A",
                "to_state": "get-dir-A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "get-dir-B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "get-dir-C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "get-dir-D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "get-dir-Z",
                "write": "Z",
                "action": "RIGHT"
            }
        ],
        "get-dir-A": [
            {
                "read": "<",
                "to_state": "get-write-A:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-A:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-B": [
            {
                "read": "<",
                "to_state": "get-write-B:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-B:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-C": [
            {
                "read": "<",
                "to_state": "get-write-C:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-C:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-D": [
            {
                "read": "<",
                "to_state": "get-write-D:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-D:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-dir-Z": [
            {
                "read": "<",
                "to_state": "get-write-Z:<",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "get-write-Z:>",
                "write": ">",
                "action": "RIGHT"
            }
        ],
        "get-write-A:<": [
            {
                "read": "1",
                "to_state": "eval-<(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(-)~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~A",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-A:>": [
            {
                "read": "1",
                "to_state": "eval->(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(-)~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~A",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-B:<": [
            {
                "read": "1",
                "to_state": "eval-<(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(-)~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~B",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-B:>": [
            {
                "read": "1",
                "to_state": "eval->(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(-)~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~B",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-C:<": [
            {
                "read": "1",
                "to_state": "eval-<(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(-)~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-C:>": [
            {
                "read": "1",
                "to_state": "eval->(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(-)~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-D:<": [
            {
                "read": "1",
                "to_state": "eval-<(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(-)~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~D",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-D:>": [
            {
                "read": "1",
                "to_state": "eval->(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(-)~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~D",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-Z:<": [
            {
                "read": "1",
                "to_state": "eval-<(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(-)~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~Z",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "get-write-Z:>": [
            {
                "read": "1",
                "to_state": "eval->(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(-)~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~Z",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-A(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-A(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(-)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-A(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-A(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-A(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-A( )": [
            {
                "read": "]",
                "to_state": "cmp-read-A( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-A( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-A( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-A( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-A( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-A( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-A( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-A( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-A( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-A( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-A( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-A( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-A( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-A( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-A( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-A( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-A( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-A( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-B(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-B(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(-)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-B(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-B(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-B(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-B( )": [
            {
                "read": "]",
                "to_state": "cmp-read-B( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-B( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-B( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-B( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-B( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-B( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-B( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-B( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-B( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-B( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-B( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-B( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-B( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-B( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-B( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-B( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-B( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-B( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-C(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-C(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(-)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-C(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-C(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-C(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-C( )": [
            {
                "read": "]",
                "to_state": "cmp-read-C( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-C( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-C( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-C( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-C( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-C( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-C( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-C( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-C( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-C( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-C( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-C( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-C( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-C( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-C( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-C( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-C( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-C( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-D(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-D(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(-)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-D(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-D(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-D(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-D( )": [
            {
                "read": "]",
                "to_state": "cmp-read-D( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-D( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-D( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-D( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-D( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-D( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-D( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-D( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-D( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-D( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-D( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-D( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-D( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-D( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-D( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-D( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-D( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-D( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(1)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(1)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(1)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(1)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(1)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(1)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(1)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(1)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(1)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(1)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(1)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(1)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(1)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(1)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(1)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(1)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-Z(1)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(1)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(1)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(.)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(.)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(.)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(.)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(.)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(.)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(.)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(.)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(.)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(.)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(.)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(.)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(.)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(.)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(.)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(.)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-Z(.)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(.)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(.)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(-)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(-)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(-)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(-)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(-)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(-)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(-)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(-)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(-)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(-)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(-)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(-)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(-)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(-)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(-)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(-)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-Z(-)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(-)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(-)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z(=)": [
            {
                "read": "]",
                "to_state": "cmp-read-Z(=)",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z(=)",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z(=)",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z(=)",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z(=)",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z(=)",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z(=)",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z(=)",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z(=)",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z(=)",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z(=)",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z(=)",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z(=)",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z(=)",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z(=)",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-Z(=)",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z(=)",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z(=)",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "to-next-trans-Z( )": [
            {
                "read": "]",
                "to_state": "cmp-read-Z( )",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "&",
                "to_state": "to-next-trans-Z( )",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "to-next-trans-Z( )",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "to-next-trans-Z( )",
                "write": "^",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "to-next-trans-Z( )",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "to-next-trans-Z( )",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "to-next-trans-Z( )",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "to-next-trans-Z( )",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "to-next-trans-Z( )",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "to-next-trans-Z( )",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "to-next-trans-Z( )",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "to-next-trans-Z( )",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "to-next-trans-Z( )",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "to-next-trans-Z( )",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "to-next-trans-Z( )",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "to-next-trans-Z( )",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "to-next-trans-Z( )",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "to-next-trans-Z( )",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(1)~A": [
            {
                "read": "&",
                "to_state": "eval-<(1)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(1)~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~A": [
            {
                "read": "&",
                "to_state": "eval-<(.)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(.)~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(-)~A": [
            {
                "read": "&",
                "to_state": "eval-<(-)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(-)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(-)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(-)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(-)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(-)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(-)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(-)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(-)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(-)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(-)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(-)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(-)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(-)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(-)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(-)~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(-)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(-)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "-",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~A": [
            {
                "read": "&",
                "to_state": "eval-<(=)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(=)~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<( )~A": [
            {
                "read": "&",
                "to_state": "eval-<( )~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<( )~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(1)~A": [
            {
                "read": "&",
                "to_state": "eval->(1)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(1)~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~A": [
            {
                "read": "&",
                "to_state": "eval->(.)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(.)~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(-)~A": [
            {
                "read": "&",
                "to_state": "eval->(-)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(-)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(-)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(-)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(-)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(-)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(-)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(-)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(-)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(-)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(-)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(-)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(-)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(-)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(-)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(-)~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(-)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(-)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "-",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~A": [
            {
                "read": "&",
                "to_state": "eval->(=)~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(=)~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->( )~A": [
            {
                "read": "&",
                "to_state": "eval->( )~A",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~A",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~A",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~A",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~A",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~A",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~A",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~A",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~A",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~A",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~A",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~A",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~A",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~A",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~A",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->( )~A",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~A",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~A",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-A",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(1)~B": [
            {
                "read": "&",
                "to_state": "eval-<(1)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(1)~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~B": [
            {
                "read": "&",
                "to_state": "eval-<(.)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(.)~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(-)~B": [
            {
                "read": "&",
                "to_state": "eval-<(-)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(-)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(-)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(-)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(-)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(-)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(-)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(-)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(-)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(-)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(-)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(-)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(-)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(-)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(-)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(-)~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(-)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(-)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "-",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~B": [
            {
                "read": "&",
                "to_state": "eval-<(=)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(=)~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<( )~B": [
            {
                "read": "&",
                "to_state": "eval-<( )~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<( )~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(1)~B": [
            {
                "read": "&",
                "to_state": "eval->(1)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(1)~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~B": [
            {
                "read": "&",
                "to_state": "eval->(.)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(.)~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(-)~B": [
            {
                "read": "&",
                "to_state": "eval->(-)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(-)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(-)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(-)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(-)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(-)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(-)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(-)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(-)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(-)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(-)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(-)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(-)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(-)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(-)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(-)~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(-)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(-)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "-",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~B": [
            {
                "read": "&",
                "to_state": "eval->(=)~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(=)~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->( )~B": [
            {
                "read": "&",
                "to_state": "eval->( )~B",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~B",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~B",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~B",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~B",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~B",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~B",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~B",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~B",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~B",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~B",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~B",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~B",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~B",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~B",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->( )~B",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~B",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~B",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-B",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(1)~C": [
            {
                "read": "&",
                "to_state": "eval-<(1)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(1)~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~C": [
            {
                "read": "&",
                "to_state": "eval-<(.)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(.)~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(-)~C": [
            {
                "read": "&",
                "to_state": "eval-<(-)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(-)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(-)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(-)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(-)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(-)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(-)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(-)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(-)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(-)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(-)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(-)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(-)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(-)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(-)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(-)~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(-)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(-)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "-",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~C": [
            {
                "read": "&",
                "to_state": "eval-<(=)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(=)~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<( )~C": [
            {
                "read": "&",
                "to_state": "eval-<( )~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<( )~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(1)~C": [
            {
                "read": "&",
                "to_state": "eval->(1)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(1)~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~C": [
            {
                "read": "&",
                "to_state": "eval->(.)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(.)~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(-)~C": [
            {
                "read": "&",
                "to_state": "eval->(-)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(-)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(-)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(-)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(-)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(-)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(-)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(-)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(-)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(-)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(-)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(-)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(-)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(-)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(-)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(-)~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(-)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(-)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "-",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~C": [
            {
                "read": "&",
                "to_state": "eval->(=)~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(=)~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->( )~C": [
            {
                "read": "&",
                "to_state": "eval->( )~C",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~C",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~C",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~C",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~C",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~C",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~C",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~C",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~C",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~C",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~C",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~C",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~C",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~C",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~C",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->( )~C",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~C",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~C",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-C",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(1)~D": [
            {
                "read": "&",
                "to_state": "eval-<(1)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(1)~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~D": [
            {
                "read": "&",
                "to_state": "eval-<(.)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(.)~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(-)~D": [
            {
                "read": "&",
                "to_state": "eval-<(-)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(-)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(-)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(-)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(-)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(-)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(-)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(-)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(-)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(-)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(-)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(-)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(-)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(-)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(-)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(-)~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(-)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(-)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "-",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~D": [
            {
                "read": "&",
                "to_state": "eval-<(=)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(=)~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<( )~D": [
            {
                "read": "&",
                "to_state": "eval-<( )~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<( )~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(1)~D": [
            {
                "read": "&",
                "to_state": "eval->(1)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(1)~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~D": [
            {
                "read": "&",
                "to_state": "eval->(.)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(.)~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(-)~D": [
            {
                "read": "&",
                "to_state": "eval->(-)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(-)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(-)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(-)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(-)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(-)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(-)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(-)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(-)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(-)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(-)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(-)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(-)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(-)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(-)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(-)~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(-)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(-)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "-",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~D": [
            {
                "read": "&",
                "to_state": "eval->(=)~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(=)~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->( )~D": [
            {
                "read": "&",
                "to_state": "eval->( )~D",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~D",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~D",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~D",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~D",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~D",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~D",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~D",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~D",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~D",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~D",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~D",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~D",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~D",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~D",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->( )~D",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~D",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~D",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-D",
                "write": " ",
                "action": "RIGHT"
            }
        ],
        "eval-<(1)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(1)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(1)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(1)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(1)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(1)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(1)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(1)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(1)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(1)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(1)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(1)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(1)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(1)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(1)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(1)~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(1)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(1)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "1",
                "action": "LEFT"
            }
        ],
        "eval-<(.)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(.)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(.)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(.)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(.)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(.)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(.)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(.)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(.)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(.)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(.)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(.)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(.)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(.)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(.)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(.)~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(.)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(.)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": ".",
                "action": "LEFT"
            }
        ],
        "eval-<(-)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(-)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(-)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(-)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(-)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(-)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(-)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(-)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(-)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(-)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(-)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(-)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(-)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(-)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(-)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(-)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(-)~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(-)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(-)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "-",
                "action": "LEFT"
            }
        ],
        "eval-<(=)~Z": [
            {
                "read": "&",
                "to_state": "eval-<(=)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<(=)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<(=)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<(=)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<(=)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<(=)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<(=)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<(=)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<(=)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<(=)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<(=)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<(=)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<(=)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<(=)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<(=)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<(=)~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<(=)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<(=)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "=",
                "action": "LEFT"
            }
        ],
        "eval-<( )~Z": [
            {
                "read": "&",
                "to_state": "eval-<( )~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval-<( )~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval-<( )~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval-<( )~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval-<( )~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval-<( )~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval-<( )~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval-<( )~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval-<( )~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval-<( )~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval-<( )~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval-<( )~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval-<( )~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval-<( )~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval-<( )~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval-<( )~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval-<( )~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval-<( )~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": " ",
                "action": "LEFT"
            }
        ],
        "eval->(1)~Z": [
            {
                "read": "&",
                "to_state": "eval->(1)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(1)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(1)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(1)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(1)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(1)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(1)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(1)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(1)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(1)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(1)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(1)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(1)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(1)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(1)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(1)~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(1)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(1)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "1",
                "action": "RIGHT"
            }
        ],
        "eval->(.)~Z": [
            {
                "read": "&",
                "to_state": "eval->(.)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(.)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(.)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(.)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(.)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(.)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(.)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(.)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(.)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(.)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(.)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(.)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(.)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(.)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(.)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(.)~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(.)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(.)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": ".",
                "action": "RIGHT"
            }
        ],
        "eval->(-)~Z": [
            {
                "read": "&",
                "to_state": "eval->(-)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(-)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(-)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(-)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(-)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(-)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(-)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(-)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(-)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(-)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(-)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(-)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(-)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(-)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(-)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(-)~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(-)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(-)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "-",
                "action": "RIGHT"
            }
        ],
        "eval->(=)~Z": [
            {
                "read": "&",
                "to_state": "eval->(=)~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->(=)~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->(=)~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->(=)~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->(=)~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->(=)~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->(=)~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->(=)~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->(=)~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->(=)~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->(=)~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->(=)~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->(=)~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->(=)~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->(=)~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->(=)~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->(=)~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->(=)~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": "=",
                "action": "RIGHT"
            }
        ],
        "eval->( )~Z": [
            {
                "read": "&",
                "to_state": "eval->( )~Z",
                "write": "&",
                "action": "RIGHT"
            },
            {
                "read": ":",
                "to_state": "eval->( )~Z",
                "write": ":",
                "action": "RIGHT"
            },
            {
                "read": "{",
                "to_state": "eval->( )~Z",
                "write": "{",
                "action": "RIGHT"
            },
            {
                "read": "}",
                "to_state": "eval->( )~Z",
                "write": "}",
                "action": "RIGHT"
            },
            {
                "read": "[",
                "to_state": "eval->( )~Z",
                "write": "[",
                "action": "RIGHT"
            },
            {
                "read": "]",
                "to_state": "eval->( )~Z",
                "write": "]",
                "action": "RIGHT"
            },
            {
                "read": "<",
                "to_state": "eval->( )~Z",
                "write": "<",
                "action": "RIGHT"
            },
            {
                "read": ">",
                "to_state": "eval->( )~Z",
                "write": ">",
                "action": "RIGHT"
            },
            {
                "read": "A",
                "to_state": "eval->( )~Z",
                "write": "A",
                "action": "RIGHT"
            },
            {
                "read": "B",
                "to_state": "eval->( )~Z",
                "write": "B",
                "action": "RIGHT"
            },
            {
                "read": "C",
                "to_state": "eval->( )~Z",
                "write": "C",
                "action": "RIGHT"
            },
            {
                "read": "D",
                "to_state": "eval->( )~Z",
                "write": "D",
                "action": "RIGHT"
            },
            {
                "read": "Z",
                "to_state": "eval->( )~Z",
                "write": "Z",
                "action": "RIGHT"
            },
            {
                "read": "1",
                "to_state": "eval->( )~Z",
                "write": "1",
                "action": "RIGHT"
            },
            {
                "read": ".",
                "to_state": "eval->( )~Z",
                "write": ".",
                "action": "RIGHT"
            },
            {
                "read": "-",
                "to_state": "eval->( )~Z",
                "write": "-",
                "action": "RIGHT"
            },
            {
                "read": "=",
                "to_state": "eval->( )~Z",
                "write": "=",
                "action": "RIGHT"
            },
            {
                "read": " ",
                "to_state": "eval->( )~Z",
                "write": " ",
                "action": "RIGHT"
            },
            {
                "read": "^",
                "to_state": "goto-state-Z",
                "write": " ",
                "action": "RIGHT"
            }
        ]
    }
}